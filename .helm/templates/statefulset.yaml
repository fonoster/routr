apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include ".helm2.fullname" . }}
  labels:
    {{- include ".helm2.labels" . | nindent 4 }}
  namespace: {{ .Release.Namespace }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include ".helm2.selectorLabels" . | nindent 6 }}
  serviceName: "routr"
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include ".helm2.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: routr
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        livenessProbe:
          exec:
            command:
            - curl
            - -k
            - --fail
            - --silent
            - --show-error
            - --connect-timeout
            - "2"
            - -L
            - https://localhost:4567/api/v1beta1/system/status
          initialDelaySeconds: {{ .Values.routr.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.routr.livenessProbe.periodSeconds }}
          successThreshold: {{ .Values.routr.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.routr.livenessProbe.failureThreshold }}   
        env:
        - name: EX_KAFKA_ENABLED
          value: {{ .Values.routr.ex_kafka.enabled | quote }}
        - name: EX_KAFKA_TOPIC
          value: {{ .Values.routr.ex_kafka.topic | quote }}
        - name: EX_KAFKA_BOOTSTRAP_SERVERS
          value: {{ .Values.routr.ex_kafka.bootstrapServers | quote }}
        - name: EX_KAFKA_SECURITY_PROTOCOL
          value: {{ .Values.routr.ex_kafka.securityProtocol | quote }}
        - name: EX_KAFKA_SASL_MECHANISM
          value: {{ .Values.routr.ex_kafka.saslMechanism | quote }}
        - name: EX_KAFKA_SASL_JAAS_CONFIG
          value: {{ .Values.routr.ex_kafka.saslJaasConfig | quote }}
        - name: EX_CONVERT_TEL_TO_E164
          value: {{ .Values.routr.ex_convertTelToE164 | quote }}
        - name: EX_UNIQUE_GATEWAY_PER_HOST_PORT
          value: {{ .Values.routr.ex_uniqueGatewayPerHostPort | quote }}
        - name: EX_RTP_ENGINE_ENABLED
          value: {{ .Values.routr.ex_rtpEngine.enabled | quote }}
        - name: EX_RTP_ENGINE_HOST
          value: {{ .Values.routr.ex_rtpEngine.host | quote }}
        - name: EX_RTP_ENGINE_PORT
          value: {{ .Values.routr.ex_rtpEngine.port | quote }}                
        - name: DATA_SOURCE_PROVIDER
          value: redis_data_provider
        - name: DATA_SOURCE_PARAMETERS
          value: host={{ .Release.Name }}-redis-master,port=6379
        - name: EXTERN_ADDR
          value: {{ .Values.routr.externAddr | quote }}
        - name: LOCALNETS
          value: {{ join "," .Values.routr.localnets }}
        - name: JAVA_OPTS
          value: {{ .Values.routr.javaOpts | quote }}
        - name: USER_AGENT
          value: {{ .Values.routr.userAgent | quote }}
        - name: BIND_ADDR
          value: {{ .Values.routr.bindAddr | quote }}
        - name: RECORD_ROUTE
          value: {{ .Values.routr.recordRoute | quote }}
        - name: USE_TO_AS_AOR
          value: {{ .Values.routr.useToAsAOR | quote }}
        - name: PATCH_REQUEST_URI
          value: {{ .Values.routr.patchRequestURI | quote }}
        - name: REGISTRAR_INTF
          value: {{ .Values.routr.registrarIntf | quote }}
        - name: ACCESS_CONTROL_LIST_ALLOW
          value: {{ join "," .Values.routr.accessControlList.allow }}
        - name: ACCESS_CONTROL_LIST_DENY
          value: {{ join "," .Values.routr.accessControlList.deny }}
        - name: REST_SERVICE_BIND_ADDR
          value: {{ .Values.routr.restService.bindAddr | quote }}
        - name: REST_SERVICE_PORT
          value: {{ .Values.routr.restService.port | quote }}
        - name: REST_SERVICE_MIN_THREADS
          value: {{ .Values.routr.restService.minThreads | quote }}
        - name: REST_SERVICE_MAX_THREADS
          value: {{ .Values.routr.restService.maxThreads | quote }}
        - name: REST_SERVICE_TIMEOUT_MILLIS
          value: {{ .Values.routr.restService.timeoutMillis | quote }}
        - name: REST_SERVICE_UNSECURED
          value: {{ .Values.routr.restService.unsecured | quote }}
        - name: REST_SERVICE_KEY_STORE
          value: {{ .Values.routr.restService.keyStore | quote }}
        - name: REST_SERVICE_KEY_STORE_PASSWORD
          value: {{ .Values.routr.restService.keyStorePassword | quote }}
        - name: REST_SERVICE_TRUST_STORE
          value: {{ .Values.routr.restService.trustStore | quote }}
        - name: REST_SERVICE_TRUST_STORE_PASSWORD
          value: {{ .Values.routr.restService.trustStorePassword | quote }}
        - name: SECURITY_CONTEXT_KEY_STORE
          value: {{ .Values.routr.securityContext.keyStore | quote }}
        - name: SECURITY_CONTEXT_TRUST_STORE
          value: {{ .Values.routr.securityContext.trustStore | quote }}
        - name: SECURITY_CONTEXT_KEY_STORE_PASSWORD
          value: {{ .Values.routr.securityContext.keyStorePassword | quote }}
        - name: SECURITY_CONTEXT_DEBUGGING
          value: {{ .Values.routr.securityContext.debugging | quote }}
        - name: SECURITY_CONTEXT_CLIENT_KEY_STORE_TYPE
          value: {{ .Values.routr.securityContext.client.keyStoreType | quote }}
        - name: SECURITY_CONTEXT_CLIENT_PROTOCOLS
          value: {{ join "," .Values.routr.securityContext.client.protocols }}
        ports:
        - name: {{ .Values.adminService.name }}
          containerPort: {{ .Values.adminService.containerPort | default .Values.adminService.port }}
          protocol: TCP
        {{- if eq .Values.udpSignalingService.enabled true }}
        - name: {{ .Values.udpSignalingService.name }}
          containerPort: {{ .Values.udpSignalingService.containerPort | default .Values.udpSignalingService.port }}
          protocol: UDP
        {{- end }}
        {{- if eq .Values.tcpSignalingService.enabled true }}
        {{- range .Values.tcpSignalingService.ports }}
        - name: {{ .name }}
          containerPort: {{ .containerPort | default .port }}
          protocol: TCP
        {{- end }}
        {{- end }}
        volumeMounts:
        - name: log4j2
          mountPath: /opt/routr/config/log4j2.yml
          subPath: log4j2.yml
        {{- if eq .Values.certs.provided true }}  
        - name: domains-cert
          mountPath: /opt/routr/etc/certs/domains-cert.jks
          subPath: domains-cert.jks
          readOnly: true
        - name: api-cert
          mountPath: /opt/routr/etc/certs/api-cert.jks
          subPath: api-cert.jks
          readOnly: true
        {{- end }}
        resources:
          {{- if .Values.resources.limits }}
          limits:
          {{- .Values.resources.limits | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.resources.requests }}
          requests:
          {{- .Values.resources.requests | toYaml | nindent 12 }}
          {{- end }}
      volumes:
      - name: log4j2
        configMap:
          name: {{ include ".helm2.fullname" . }}-log4j2
      {{- if eq .Values.certs.provided true }}          
      - name: domains-cert
        secret:
          secretName: {{ .Values.certs.name }}
      - name: api-cert
        secret:
          secretName: {{ .Values.certs.name }}
      {{- end }}
