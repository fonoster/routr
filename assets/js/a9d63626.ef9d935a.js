"use strict";(self.webpackChunkroutr_docs=self.webpackChunkroutr_docs||[]).push([[7372],{1068:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var i=n(4848),s=n(8453);const r={},o="Securing the signaling path",c={id:"guides/securing-the-signaling-path",title:"Securing the signaling path",description:"Follow this guide to secure the signaling between your endpoints and Routr. Keep in mind that Routr only secures the signaling and that the endpoints are ultimately responsible for securing the media.",source:"@site/versioned_docs/version-1.x.x/guides/securing-the-signaling-path.md",sourceDirName:"guides",slug:"/guides/securing-the-signaling-path",permalink:"/docs/1.x.x/guides/securing-the-signaling-path",draft:!1,unlisted:!1,editUrl:"https://github.com/fonoster/routr-website/edit/main/versioned_docs/version-1.x.x/guides/securing-the-signaling-path.md",tags:[],version:"1.x.x",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Running with Docker",permalink:"/docs/1.x.x/guides/running-with-docker-or-compose"},next:{title:"overview",permalink:"/docs/1.x.x/api/overview"}},a={},l=[{value:"Creating a Java Keystore(.JKS) certificate",id:"creating-a-java-keystorejks-certificate",level:2},{value:"Creating a self-signed Certificate",id:"creating-a-self-signed-certificate",level:3},{value:"Creating a Certificate using Let&#39;s Encrypt",id:"creating-a-certificate-using-lets-encrypt",level:3},{value:"Installing the Certificate in Routr",id:"installing-the-certificate-in-routr",level:2},{value:"Setting up the Sip Phones",id:"setting-up-the-sip-phones",level:2}];function d(e){const t={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"securing-the-signaling-path",children:"Securing the signaling path"}),"\n",(0,i.jsxs)(t.p,{children:["Follow this guide to secure the signaling between your endpoints and Routr. Keep in mind that ",(0,i.jsx)(t.em,{children:"Routr"})," only secures the signaling and that the endpoints are ultimately responsible for securing the media."]}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsx)(t.p,{children:"For this guide, we used a fictitious domain name to demonstrate the process of securing the signaling path"}),"\n"]}),"\n",(0,i.jsx)("img",{src:"/img/secure_signaling.png",width:"600",vspace:"30"}),"\n",(0,i.jsx)(t.h2,{id:"creating-a-java-keystorejks-certificate",children:"Creating a Java Keystore(.JKS) certificate"}),"\n",(0,i.jsxs)(t.p,{children:["We need a keystore (.jks) to properly handling the certificates. The following steps create a valid keystore file using a self-signed method or using the free ",(0,i.jsx)(t.a,{href:"https://letsencrypt.org/",children:"Let's Encrypt service"}),"."]}),"\n",(0,i.jsx)(t.h3,{id:"creating-a-self-signed-certificate",children:"Creating a self-signed Certificate"}),"\n",(0,i.jsxs)(t.p,{children:["Perhaps the easiest way to create a valid certificate for Routr is using a self-signed certificate. To generate the certificate change into ",(0,i.jsx)(t.code,{children:"etc/certs"})," in your Routr installation and run the following script:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:'keytool -genkey -keyalg RSA \\\n -noprompt \\\n -alias routr \\\n -keystore domains-cert.jks \\\n -storepass changeit \\\n -keypass changeit \\\n -validity 365 \\\n -keysize 2048 \\\n -dname "CN=sip.ocean.com, OU=OSS, O=Your Company Inc, L=Sanford, ST=NC, C=US" \\\n -ext SAN=dns:sip.ocean.com,dns:localhost,ip:127.0.0.1\n'})}),"\n",(0,i.jsx)(t.p,{children:"Remember to adjust the values to match your project's information."}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"WSS"})," does not work with a self-signed certificate. However, you can add a security exception by using ",(0,i.jsx)(t.code,{children:"https"})," instead of ",(0,i.jsx)(t.code,{children:"wss"})," in your browser's search bar and then accepting the security certificate."]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"creating-a-certificate-using-lets-encrypt",children:"Creating a Certificate using Let's Encrypt"}),"\n",(0,i.jsxs)(t.p,{children:["The recommended way to create a valid certificate for Routr is using the free service ",(0,i.jsx)(t.a,{href:"https://letsencrypt.org",children:"Let's Encrypt"}),". Please go to ",(0,i.jsx)(t.a,{href:"https://letsencrypt.org/",children:"https://letsencrypt.org/"})," for details on how to install the required tooling. To generate the certificate, use the following steps:"]}),"\n",(0,i.jsx)(t.p,{children:"\u278a Create keys"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"certbot certonly --standalone -d sip.ocean.com --email admin@sip.ocean.com\n"})}),"\n",(0,i.jsx)(t.p,{children:"Change to the directory where we created the certificates(generally at /etc/letsencrypt/live/sip.ocean.com)."}),"\n",(0,i.jsx)(t.p,{children:"\u278b Create a PKCS12 file containing full chain and private key"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"openssl pkcs12 -export -in fullchain.pem -inkey privkey.pem -out pkcs.p12 -name domains-cert.jks\n"})}),"\n",(0,i.jsx)(t.p,{children:"Please make a note of the password since you need it in the next step."}),"\n",(0,i.jsx)(t.p,{children:"\u278c Convert PKCS12 to Keystore"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"keytool -importkeystore -srckeystore keystore.pkcs12 -srcstoretype PKCS12 -destkeystore domains-cert.jks\n"})}),"\n",(0,i.jsx)(t.h2,{id:"installing-the-certificate-in-routr",children:"Installing the Certificate in Routr"}),"\n",(0,i.jsxs)(t.p,{children:["To enable secure signaling in Routr, copy your certificate in ",(0,i.jsx)(t.code,{children:"etc/certs"})," and edit the file ",(0,i.jsx)(t.code,{children:"config/config.yml"})," to look like this:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yml",children:"apiVersion: v1beta1\nmetadata:\n  userAgent: Routr v1.0\nspec:\n  securityContext:\n    keyStore: etc/certs/domains-cert.jks\n    trustStore: etc/certs/domains-cert.jks\n    keyStorePassword: 'changeit'\n    trustStorePassword: 'changeit'\n    keyStoreType: 'jks'\n    debugging: true                  # Enabled debug only for testing\n  transport:\n    - protocol: tls\n      port: 5061\n...\n"})}),"\n",(0,i.jsxs)(t.p,{children:["If you set the property ",(0,i.jsx)(t.code,{children:"spec.securityContext.debugging"}),"  to ",(0,i.jsx)(t.code,{children:"true"}),", you can get some valuable information about the status of the configuration. You can also test your configuration using the following command:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"openssl s_client -host 192.168.1.2 -port 5061    # Remember to use Routr's IP\n"})}),"\n",(0,i.jsx)(t.h2,{id:"setting-up-the-sip-phones",children:"Setting up the Sip Phones"}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsxs)(t.p,{children:["For this guide, we are using ",(0,i.jsx)(t.code,{children:"Blink Pro"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["Go to the account that you want to secure, select ",(0,i.jsx)(t.code,{children:"Advanced -> Sip Signaling"})," and change the parameter ",(0,i.jsx)(t.code,{children:"Primary Proxy"})," to ",(0,i.jsx)(t.code,{children:"${proxyHost}:${proxyPort};transport=tls"}),". See the example in the following image:"]}),"\n",(0,i.jsx)("img",{src:"/img/blinkpro_tls_config.png",width:"600"}),"\n",(0,i.jsx)(t.p,{children:"If everything went well, you should see a green padlock like the one in the image below:"}),"\n",(0,i.jsx)("img",{src:"/img/blinkpro_tls_secured.png",width:"400"})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>c});var i=n(6540);const s={},r=i.createContext(s);function o(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);