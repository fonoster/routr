"use strict";(self.webpackChunkroutr_docs=self.webpackChunkroutr_docs||[]).push([[1535],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>g});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(n),d=i,g=c["".concat(s,".").concat(d)]||c[d]||m[d]||r;return n?a.createElement(g,o(o({ref:t},u),{},{components:n})):a.createElement(g,o({ref:t},u))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:i,o[1]=l;for(var p=2;p<r;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7238:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var a=n(7462),i=(n(7294),n(3905));const r={},o="Basic Setup",l={unversionedId:"guides/basic-setup",id:"version-1.x.x/guides/basic-setup",title:"Basic Setup",description:"This document is a step-by-step guide on VoIP setup at home or the office. For calls to the PSTN you need to have a SIP provider like voip.ms or did.logic.com.",source:"@site/versioned_docs/version-1.x.x/guides/basic-setup.md",sourceDirName:"guides",slug:"/guides/basic-setup",permalink:"/docs/1.x.x/guides/basic-setup",draft:!1,editUrl:"https://github.com/fonoster/routr-website/edit/main/versioned_docs/version-1.x.x/guides/basic-setup.md",tags:[],version:"1.x.x",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Users",permalink:"/docs/1.x.x/configuration/users"},next:{title:"Routr as Asterisk frontend",permalink:"/docs/1.x.x/guides/routr-as-asterisk-frontend"}},s={},p=[{value:"Requirements",id:"requirements",level:2},{value:"Setting up the Server",id:"setting-up-the-server",level:2},{value:"Configuring the Gateway",id:"configuring-the-gateway",level:3},{value:"Configuring the Number",id:"configuring-the-number",level:3},{value:"Creating a new Domain and EgressPolicy",id:"creating-a-new-domain-and-egresspolicy",level:3},{value:"Creating the Agents",id:"creating-the-agents",level:3},{value:"Configuring the SIP devices",id:"configuring-the-sip-devices",level:2},{value:"Making calls",id:"making-calls",level:2},{value:"What&#39;s Next?",id:"whats-next",level:2}],u={toc:p},c="wrapper";function m(e){let{components:t,...n}=e;return(0,i.kt)(c,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"basic-setup"},"Basic Setup"),(0,i.kt)("p",null,"This document is a step-by-step guide on VoIP setup at home or the office. For calls to the PSTN you need to have a SIP provider like ",(0,i.kt)("inlineCode",{parentName:"p"},"voip.ms")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"did.logic.com"),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Content")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#requirements"},"Requirements")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#setting-up-the-server"},"Setting up the Server"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#configuring-the-gateway"},"Configuring the Gateway")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#configuring-the-number"},"Configuring the Number ")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#creating-a-new-domain-and-egresspolicy"},"Creating a new Domain and EgressPolicy")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#creating-the-agents"},"Creating the Agents")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#configuring-the-sip-devices"},"Configuring the SIP devices")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#making-calls"},"Making calls")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"whats-next"},"What's Next"))),(0,i.kt)("h2",{id:"requirements"},"Requirements"),(0,i.kt)("p",null,"This tutorial assumes the following:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Two SIP phones connected to the same LAN"),(0,i.kt)("li",{parentName:"ul"},"A fresh installation of Routr"),(0,i.kt)("li",{parentName:"ul"},"SIP providers such as ",(0,i.kt)("inlineCode",{parentName:"li"},"voip.ms")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"did.logic.com"))),(0,i.kt)("h2",{id:"setting-up-the-server"},"Setting up the Server"),(0,i.kt)("p",null,"A set of sample configuration covering this scenario is available in the Github ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/fonoster/routr/tree/master/config"},"repo"),". You might overwrite the files in the ",(0,i.kt)("inlineCode",{parentName:"p"},"config")," folder if you wish to skip this section."),(0,i.kt)("h3",{id:"configuring-the-gateway"},"Configuring the Gateway"),(0,i.kt)("p",null,"To configure the Gateway, you must consult your SIP provider and obtain the credentials and ",(0,i.kt)("inlineCode",{parentName:"p"},"registration host"),". The key fields for the configuration are ",(0,i.kt)("inlineCode",{parentName:"p"},"metadata.ref"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"spec.regService.host")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"spec.regService.credentials"),". Here is an example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml"},"- apiVersion: v1beta1\n  kind: Gateway\n  metadata:\n    name: Provider Inc\n  spec:\n    host: sip.provider.net\n    credentials:\n      username: 'youruser'\n      secret: 'yoursecret'\n    transport: udp\n")),(0,i.kt)("h3",{id:"configuring-the-number"},"Configuring the Number"),(0,i.kt)("p",null,"To configure your Number or virtual number, you must open and edit the file ",(0,i.kt)("inlineCode",{parentName:"p"},"config/numbers.yml"),". Notice in the example below, how your reference the Gateway by using the field ",(0,i.kt)("inlineCode",{parentName:"p"},"metadata.geRef"),". The key field while configuring Numbers are ",(0,i.kt)("inlineCode",{parentName:"p"},"spec.location.telUrl")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"spec.location.aorLink"),". Keep in mind that the value in ",(0,i.kt)("inlineCode",{parentName:"p"},"spec.location.telUrl")," must be formatted, precisely, as sent by the provider."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml"},"- apiVersion: v1beta1\n  kind: Number\n  metadata:\n    gwRef: gweef506\n    geoInfo:\n      city: Columbus, GA\n      country: USA\n      countryISOCode: US\n  spec:\n    location:\n      telUrl: 'tel:17066041487'\n      aorLink: 'sip:1001@sip.local'\n")),(0,i.kt)("h3",{id:"creating-a-new-domain-and-egresspolicy"},"Creating a new Domain and EgressPolicy"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Routr")," is a Domain centric SIP Server. A Domain is used to group several Agents in the same context. The Domain URI can be an arbitrary name, but we recommend using a fully qualified domain name (FQDN). You also need to configure an ",(0,i.kt)("em",{parentName:"p"},"EgressPolicy")," to allow calls outside the Domain. Here is how the file ",(0,i.kt)("inlineCode",{parentName:"p"},"config/domains.yml")," needs to look like:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml"},"- apiVersion: v1beta1\n  kind: Domain\n  metadata:\n    name: Local Office\n  spec:\n    context:\n      domainUri: sip.local\n      egressPolicy:\n        rule: .*\n        numberRef: dd50baa4\n")),(0,i.kt)("h3",{id:"creating-the-agents"},"Creating the Agents"),(0,i.kt)("p",null,"We now create the Agents ",(0,i.kt)("inlineCode",{parentName:"p"},"1001")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"1002"),". Keep in mind that field ",(0,i.kt)("inlineCode",{parentName:"p"},"spec.credentials.username")," can be alphanumeric, so ",(0,i.kt)("inlineCode",{parentName:"p"},"john")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"john001")," is also acceptable."),(0,i.kt)("p",null,"Pay close attention to the credentials block since it contains the username and secret for both Agents."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml"},"- apiVersion: v1beta1\n  kind: Agent\n  metadata:\n    name: John Doe\n  spec:\n    credentials:\n      username: '1001'\n      secret: '1234'\n    domains: [sip.local]\n- apiVersion: v1beta1\n  kind: Agent\n  metadata:\n    name: Janie Doe\n  spec:\n    credentials:\n      username: '1002'\n      secret: '1234'\n    domains: [sip.local]\n")),(0,i.kt)("p",null,"To verify your configuration, start the server by issuing the command ",(0,i.kt)("inlineCode",{parentName:"p"},"routr"),". In a separate window, use the following commands:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"rctl get gateway")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"rctl get number")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"rctl get domain")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"rctl get agents"))),(0,i.kt)("p",null,"Your output should be as follows:"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Starting the Server")),(0,i.kt)("img",{src:"/img/starting_server.png",width:"600"}),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Verifying the Configuration")),(0,i.kt)("img",{src:"/img/verify_configuration.png",width:"600"}),(0,i.kt)("h2",{id:"configuring-the-sip-devices"},"Configuring the SIP devices"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},'We are using "Telephone" for this example. You might use any softphone you wish, keep in mind that the configuration might look slightly different.')),(0,i.kt)("p",null,"Configure your softphone using the information you gather in the last step. Start by completing only the required information: ",(0,i.kt)("em",{parentName:"p"},"username"),", ",(0,i.kt)("em",{parentName:"p"},"domain"),", ",(0,i.kt)("em",{parentName:"p"},"password"),". Also, In the advanced section use the server's ",(0,i.kt)("strong",{parentName:"p"},"IP")," as your ",(0,i.kt)("em",{parentName:"p"},"Registry Server")," and ",(0,i.kt)("em",{parentName:"p"},"Proxy"),". Here is how mine looks like:"),(0,i.kt)("img",{src:"/img/telephone_config_general.png",width:"500"}),(0,i.kt)("img",{src:"/img/telephone_config_advanced.png",width:"500"}),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},'Make sure to check the box "Use this account" to register your device')),(0,i.kt)("p",null,"If everything went well, we only need to confirm that both softphones have registered correctly. Conveniently you can use the ",(0,i.kt)("inlineCode",{parentName:"p"},".rctl locate")," to obtain a list of registered devices. It may seem like much information. However, what's relevant here is that both ",(0,i.kt)("inlineCode",{parentName:"p"},"1001")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"1002")," are present in the location service and therefore, can reach each other."),(0,i.kt)("img",{src:"/img/locate_agents.png",width:"600"}),(0,i.kt)("h2",{id:"making-calls"},"Making calls"),(0,i.kt)("p",null,"The last step is easy. If everything went well, you are now able to call any device inside or outside your Domain. Use the destination URI (eg.: ",(0,i.kt)("a",{parentName:"p",href:"mailto:1001@sip.local"},"1001@sip.local")," or ",(0,i.kt)("a",{parentName:"p",href:"mailto:7853178060@sip.local"},"7853178060@sip.local"),")."),(0,i.kt)("h2",{id:"whats-next"},"What's Next?"),(0,i.kt)("p",null,"You can check out the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/fonoster../wiki/Home"},"https://github.com/fonoster../wiki/Home")," to see more examples. If you have any questions, start an issue or contact us via:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Twitter: ",(0,i.kt)("a",{parentName:"li",href:"https://twitter.com/fonoster"},"@fonoster")),(0,i.kt)("li",{parentName:"ul"},"Email: ",(0,i.kt)("a",{parentName:"li",href:"mailto:fonosterteam@fonoster.com"},"fonosterteam@fonoster.com"))))}m.isMDXComponent=!0}}]);