"use strict";(self.webpackChunkroutr_docs=self.webpackChunkroutr_docs||[]).push([[7279],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>g});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(n),d=a,g=p["".concat(s,".").concat(d)]||p[d]||m[d]||o;return n?r.createElement(g,l(l({ref:t},u),{},{components:n})):r.createElement(g,l({ref:t},u))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[p]="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1239:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={},l="Domains",i={unversionedId:"configuration/domains",id:"version-1.x.x/configuration/domains",title:"Domains",description:"Domains group Agents together. They help isolate groups and allow the creation of rule for incoming and",source:"@site/versioned_docs/version-1.x.x/configuration/domains.md",sourceDirName:"configuration",slug:"/configuration/domains",permalink:"/docs/1.x.x/configuration/domains",draft:!1,editUrl:"https://github.com/fonoster/routr-website/edit/main/versioned_docs/version-1.x.x/configuration/domains.md",tags:[],version:"1.x.x",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Agents",permalink:"/docs/1.x.x/configuration/agents"},next:{title:"Gateways",permalink:"/docs/1.x.x/configuration/gateways"}},s={},c=[{value:"Domain Resource",id:"domain-resource",level:2},{value:"Example",id:"example",level:2}],u={toc:c},p="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"domains"},"Domains"),(0,a.kt)("p",null,"Domains group Agents together. They help isolate groups and allow the creation of rule for incoming and\noutgoing calling. The domains configuration can be provided using the file ",(0,a.kt)("inlineCode",{parentName:"p"},"config/domains.yml")," located at the root of your Routr installation."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"If using Redis this configuration gets stored in the database.")),(0,a.kt)("h2",{id:"domain-resource"},"Domain Resource"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Property"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"),(0,a.kt)("th",{parentName:"tr",align:null},"Required"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"apiVersion"),(0,a.kt)("td",{parentName:"tr",align:null},"Indicates the version of the resource (Not yet implemented)"),(0,a.kt)("td",{parentName:"tr",align:null},"Yes")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"kind"),(0,a.kt)("td",{parentName:"tr",align:null},"Defines the type of resource"),(0,a.kt)("td",{parentName:"tr",align:null},"Yes")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"metadata.name"),(0,a.kt)("td",{parentName:"tr",align:null},"Friendly name for the SIP domain"),(0,a.kt)("td",{parentName:"tr",align:null},"Yes")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"spec.context.domainUri"),(0,a.kt)("td",{parentName:"tr",align:null},"Domain URI. FQDN is recommended"),(0,a.kt)("td",{parentName:"tr",align:null},"Yes")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"spec.context.egressPolicy.rule"),(0,a.kt)("td",{parentName:"tr",align:null},"Regular expression indicating when a call will be routed via ",(0,a.kt)("inlineCode",{parentName:"td"},"spec.context.egressPolicy.numberRef")),(0,a.kt)("td",{parentName:"tr",align:null},"No")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"spec.context.egressPolicy.numberRef"),(0,a.kt)("td",{parentName:"tr",align:null},"Reference to the Number that will route the call"),(0,a.kt)("td",{parentName:"tr",align:null},"No")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"spec.context.accessControlList.allow","[*]"),(0,a.kt)("td",{parentName:"tr",align:null},"Traffic allow for Network in list"),(0,a.kt)("td",{parentName:"tr",align:null},"No")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"spec.context.accessControlList.deny","[*]"),(0,a.kt)("td",{parentName:"tr",align:null},"Traffic disabled for Network in list"),(0,a.kt)("td",{parentName:"tr",align:null},"No")))),(0,a.kt)("p",null,"ACL Rules may be in CIDR, IP/Mask, or single IP format. Example of rules are:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"0.0.0.0/1 # all"),(0,a.kt)("li",{parentName:"ul"},"192.168.1.0/255.255.255.0"),(0,a.kt)("li",{parentName:"ul"},"192.168.0.1/31")),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"- apiVersion: v1beta1\n  kind: Domain\n  metadata:\n    name: Local Server\n  spec:\n    context:\n      domainUri: sip.local\n      egressPolicy:\n        rule: .*\n        numberRef: Number0001\n      accessControlList:\n        deny: [0.0.0.0/1]     # Deny all\n        allow: [192.168.0.1/31]\n")))}m.isMDXComponent=!0}}]);