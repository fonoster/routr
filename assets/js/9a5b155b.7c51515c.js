"use strict";(self.webpackChunkroutr_docs=self.webpackChunkroutr_docs||[]).push([[9515],{4370:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"overview/architecture","title":"Architecture","description":"Routr\'s architecture diagram","source":"@site/versioned_docs/version-2.0.0/overview/architecture.md","sourceDirName":"overview","slug":"/overview/architecture","permalink":"/docs/2.0.0/overview/architecture","draft":false,"unlisted":false,"editUrl":"https://github.com/fonoster/routr-website/edit/main/versioned_docs/version-2.0.0/overview/architecture.md","tags":[],"version":"2.0.0","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Introduction","permalink":"/docs/2.0.0/overview/introduction"},"next":{"title":"Concepts","permalink":"/docs/2.0.0/overview/concepts"}}');var o=r(4848),n=r(8453);const s={},c="Architecture",a={},d=[];function h(e){const t={a:"a",h1:"h1",header:"header",img:"img",li:"li",p:"p",ul:"ul",...(0,n.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"architecture",children:"Architecture"})}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"Routr&#39;s architecture diagram",src:r(5763).A+"",width:"1155",height:"715"})}),"\n",(0,o.jsx)(t.h1,{id:"summary",children:"Summary"}),"\n",(0,o.jsx)(t.p,{children:"Routr takes a radically different approach to SIP servers. Instead of using a monolithic architecture, Routr comprises a set of loosely coupled services that communicate with each other using gRPC. This approach allows Routr to be easily extended, customized, and scaled."}),"\n",(0,o.jsx)(t.h1,{id:"specification",children:"Specification"}),"\n",(0,o.jsx)(t.p,{children:"With Routr v2, we introduced a set of specifications describing each service's behavior. The specifications are the following:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.a,{href:"https://github.com/fonoster/routr/blob/master/docs/specs/CORE.md",children:"Core Specification"})}),"\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.a,{href:"https://github.com/fonoster/routr/blob/master/docs/specs/CONNECT.md",children:"Connect Specification"})}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:"The Core specification describes the core components and their behavior. It explains how to transform SIP messages into protocol buffers and how to handle SIP routing."}),"\n",(0,o.jsx)(t.p,{children:"The Connect specification describes how Routr implements the SIP Connect specification. It explains how to handle SIP routing for Agents, Peers, Trunks, Numbers, ACL, and more."}),"\n",(0,o.jsx)(t.p,{children:"Most users will not need to read the specifications. However, if you want to extend Routr's functionality, we recommend you read them."})]})}function u(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},5763:(e,t,r)=>{r.d(t,{A:()=>i});const i=r.p+"assets/images/architecture_v2-8861306d8626ddea399b72e2aa55619e.png"},8453:(e,t,r)=>{r.d(t,{R:()=>s,x:()=>c});var i=r(6540);const o={},n=i.createContext(o);function s(e){const t=i.useContext(n);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(n.Provider,{value:t},e.children)}}}]);