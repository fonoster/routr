"use strict";(self.webpackChunkroutr_docs=self.webpackChunkroutr_docs||[]).push([[9692],{2005:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"guides/basic-setup","title":"Basic Setup","description":"This document is a step-by-step guide on VoIP setup at home or the office. For calls to the PSTN you need to have a SIP provider like voip.ms or did.logic.com.","source":"@site/versioned_docs/version-1.x.x/guides/basic-setup.md","sourceDirName":"guides","slug":"/guides/basic-setup","permalink":"/docs/1.x.x/guides/basic-setup","draft":false,"unlisted":false,"editUrl":"https://github.com/fonoster/routr/edit/main/docs/docs/versioned_docs/version-1.x.x/guides/basic-setup.md","tags":[],"version":"1.x.x","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Users","permalink":"/docs/1.x.x/configuration/users"},"next":{"title":"Routr as Asterisk frontend","permalink":"/docs/1.x.x/guides/routr-as-asterisk-frontend"}}');var r=i(4848),t=i(8453);const o={},c="Basic Setup",a={},l=[{value:"Requirements",id:"requirements",level:2},{value:"Setting up the Server",id:"setting-up-the-server",level:2},{value:"Configuring the Gateway",id:"configuring-the-gateway",level:3},{value:"Configuring the Number",id:"configuring-the-number",level:3},{value:"Creating a new Domain and EgressPolicy",id:"creating-a-new-domain-and-egresspolicy",level:3},{value:"Creating the Agents",id:"creating-the-agents",level:3},{value:"Configuring the SIP devices",id:"configuring-the-sip-devices",level:2},{value:"Making calls",id:"making-calls",level:2},{value:"What&#39;s Next?",id:"whats-next",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"basic-setup",children:"Basic Setup"})}),"\n",(0,r.jsxs)(n.p,{children:["This document is a step-by-step guide on VoIP setup at home or the office. For calls to the PSTN you need to have a SIP provider like ",(0,r.jsx)(n.code,{children:"voip.ms"})," or ",(0,r.jsx)(n.code,{children:"did.logic.com"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Content"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#requirements",children:"Requirements"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#setting-up-the-server",children:"Setting up the Server"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#configuring-the-gateway",children:"Configuring the Gateway"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#configuring-the-number",children:"Configuring the Number "})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#creating-a-new-domain-and-egresspolicy",children:"Creating a new Domain and EgressPolicy"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#creating-the-agents",children:"Creating the Agents"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#configuring-the-sip-devices",children:"Configuring the SIP devices"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#making-calls",children:"Making calls"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#whats-next",children:"What's Next"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"requirements",children:"Requirements"}),"\n",(0,r.jsx)(n.p,{children:"This tutorial assumes the following:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Two SIP phones connected to the same LAN"}),"\n",(0,r.jsx)(n.li,{children:"A fresh installation of Routr"}),"\n",(0,r.jsxs)(n.li,{children:["SIP providers such as ",(0,r.jsx)(n.code,{children:"voip.ms"})," or ",(0,r.jsx)(n.code,{children:"did.logic.com"})]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"setting-up-the-server",children:"Setting up the Server"}),"\n",(0,r.jsxs)(n.p,{children:["A set of sample configuration covering this scenario is available in the Github ",(0,r.jsx)(n.a,{href:"https://github.com/fonoster/routr/tree/master/config",children:"repo"}),". You might overwrite the files in the ",(0,r.jsx)(n.code,{children:"config"})," folder if you wish to skip this section."]}),"\n",(0,r.jsx)(n.h3,{id:"configuring-the-gateway",children:"Configuring the Gateway"}),"\n",(0,r.jsxs)(n.p,{children:["To configure the Gateway, you must consult your SIP provider and obtain the credentials and ",(0,r.jsx)(n.code,{children:"registration host"}),". The key fields for the configuration are ",(0,r.jsx)(n.code,{children:"metadata.ref"}),", ",(0,r.jsx)(n.code,{children:"spec.regService.host"})," and ",(0,r.jsx)(n.code,{children:"spec.regService.credentials"}),". Here is an example:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yml",children:"- apiVersion: v1beta1\n  kind: Gateway\n  metadata:\n    name: Provider Inc\n  spec:\n    host: sip.provider.net\n    credentials:\n      username: 'youruser'\n      secret: 'yoursecret'\n    transport: udp\n"})}),"\n",(0,r.jsx)(n.h3,{id:"configuring-the-number",children:"Configuring the Number"}),"\n",(0,r.jsxs)(n.p,{children:["To configure your Number or virtual number, you must open and edit the file ",(0,r.jsx)(n.code,{children:"config/numbers.yml"}),". Notice in the example below, how your reference the Gateway by using the field ",(0,r.jsx)(n.code,{children:"metadata.geRef"}),". The key field while configuring Numbers are ",(0,r.jsx)(n.code,{children:"spec.location.telUrl"})," and ",(0,r.jsx)(n.code,{children:"spec.location.aorLink"}),". Keep in mind that the value in ",(0,r.jsx)(n.code,{children:"spec.location.telUrl"})," must be formatted, precisely, as sent by the provider."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yml",children:"- apiVersion: v1beta1\n  kind: Number\n  metadata:\n    gwRef: gweef506\n    geoInfo:\n      city: Columbus, GA\n      country: USA\n      countryISOCode: US\n  spec:\n    location:\n      telUrl: 'tel:17066041487'\n      aorLink: 'sip:1001@sip.local'\n"})}),"\n",(0,r.jsx)(n.h3,{id:"creating-a-new-domain-and-egresspolicy",children:"Creating a new Domain and EgressPolicy"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Routr"})," is a Domain centric SIP Server. A Domain is used to group several Agents in the same context. The Domain URI can be an arbitrary name, but we recommend using a fully qualified domain name (FQDN). You also need to configure an ",(0,r.jsx)(n.em,{children:"EgressPolicy"})," to allow calls outside the Domain. Here is how the file ",(0,r.jsx)(n.code,{children:"config/domains.yml"})," needs to look like:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yml",children:"- apiVersion: v1beta1\n  kind: Domain\n  metadata:\n    name: Local Office\n  spec:\n    context:\n      domainUri: sip.local\n      egressPolicy:\n        rule: .*\n        numberRef: dd50baa4\n"})}),"\n",(0,r.jsx)(n.h3,{id:"creating-the-agents",children:"Creating the Agents"}),"\n",(0,r.jsxs)(n.p,{children:["We now create the Agents ",(0,r.jsx)(n.code,{children:"1001"})," and ",(0,r.jsx)(n.code,{children:"1002"}),". Keep in mind that field ",(0,r.jsx)(n.code,{children:"spec.credentials.username"})," can be alphanumeric, so ",(0,r.jsx)(n.code,{children:"john"})," or ",(0,r.jsx)(n.code,{children:"john001"})," is also acceptable."]}),"\n",(0,r.jsx)(n.p,{children:"Pay close attention to the credentials block since it contains the username and secret for both Agents."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yml",children:"- apiVersion: v1beta1\n  kind: Agent\n  metadata:\n    name: John Doe\n  spec:\n    credentials:\n      username: '1001'\n      secret: '1234'\n    domains: [sip.local]\n- apiVersion: v1beta1\n  kind: Agent\n  metadata:\n    name: Janie Doe\n  spec:\n    credentials:\n      username: '1002'\n      secret: '1234'\n    domains: [sip.local]\n"})}),"\n",(0,r.jsxs)(n.p,{children:["To verify your configuration, start the server by issuing the command ",(0,r.jsx)(n.code,{children:"routr"}),". In a separate window, use the following commands:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"rctl get gateway"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"rctl get number"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"rctl get domain"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"rctl get agents"})}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Your output should be as follows:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Starting the Server"})}),"\n",(0,r.jsx)("img",{src:"/img/starting_server.png",width:"600"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Verifying the Configuration"})}),"\n",(0,r.jsx)("img",{src:"/img/verify_configuration.png",width:"600"}),"\n",(0,r.jsx)(n.h2,{id:"configuring-the-sip-devices",children:"Configuring the SIP devices"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:'We are using "Telephone" for this example. You might use any softphone you wish, keep in mind that the configuration might look slightly different.'}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Configure your softphone using the information you gather in the last step. Start by completing only the required information: ",(0,r.jsx)(n.em,{children:"username"}),", ",(0,r.jsx)(n.em,{children:"domain"}),", ",(0,r.jsx)(n.em,{children:"password"}),". Also, In the advanced section use the server's ",(0,r.jsx)(n.strong,{children:"IP"})," as your ",(0,r.jsx)(n.em,{children:"Registry Server"})," and ",(0,r.jsx)(n.em,{children:"Proxy"}),". Here is how mine looks like:"]}),"\n",(0,r.jsx)("img",{src:"/img/telephone_config_general.png",width:"500"}),"\n",(0,r.jsx)("img",{src:"/img/telephone_config_advanced.png",width:"500"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:'Make sure to check the box "Use this account" to register your device'}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["If everything went well, we only need to confirm that both softphones have registered correctly. Conveniently you can use the ",(0,r.jsx)(n.code,{children:".rctl locate"})," to obtain a list of registered devices. It may seem like much information. However, what's relevant here is that both ",(0,r.jsx)(n.code,{children:"1001"})," and ",(0,r.jsx)(n.code,{children:"1002"})," are present in the location service and therefore, can reach each other."]}),"\n",(0,r.jsx)("img",{src:"/img/locate_agents.png",width:"600"}),"\n",(0,r.jsx)(n.h2,{id:"making-calls",children:"Making calls"}),"\n",(0,r.jsxs)(n.p,{children:["The last step is easy. If everything went well, you are now able to call any device inside or outside your Domain. Use the destination URI (eg.: ",(0,r.jsx)(n.a,{href:"mailto:1001@sip.local",children:"1001@sip.local"})," or ",(0,r.jsx)(n.a,{href:"mailto:7853178060@sip.local",children:"7853178060@sip.local"}),")."]}),"\n",(0,r.jsx)(n.h2,{id:"whats-next",children:"What's Next?"}),"\n",(0,r.jsxs)(n.p,{children:["You can check out the ",(0,r.jsx)(n.a,{href:"https://github.com/fonoster../wiki/Home",children:"https://github.com/fonoster../wiki/Home"})," to see more examples. If you have any questions, start an issue or contact us via:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Twitter: ",(0,r.jsx)(n.a,{href:"https://twitter.com/fonoster",children:"@fonoster"})]}),"\n",(0,r.jsxs)(n.li,{children:["Email: ",(0,r.jsx)(n.a,{href:"mailto:fonosterteam@fonoster.com",children:"fonosterteam@fonoster.com"})]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>c});var s=i(6540);const r={},t=s.createContext(r);function o(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);