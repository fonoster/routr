"use strict";(self.webpackChunkroutr_docs=self.webpackChunkroutr_docs||[]).push([[6224],{3905:(e,t,n)=>{n.d(t,{Zo:()=>i,kt:()=>c});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),u=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},i=function(e){var t=u(e.components);return a.createElement(p.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,i=o(e,["components","mdxType","originalType","parentName"]),d=u(n),k=r,c=d["".concat(p,".").concat(k)]||d[k]||m[k]||l;return n?a.createElement(c,s(s({ref:t},i),{},{components:n})):a.createElement(c,s({ref:t},i))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,s=new Array(l);s[0]=k;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[d]="string"==typeof e?e:r,s[1]=o;for(var u=2;u<l;u++)s[u]=n[u];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},4305:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>u});var a=n(7462),r=(n(7294),n(3905));const l={},s="SDK",o={unversionedId:"connect/nodesdk/sdk",id:"connect/nodesdk/sdk",title:"SDK",description:"* Installation",source:"@site/docs/connect/nodesdk/sdk.md",sourceDirName:"connect/nodesdk",slug:"/connect/nodesdk/sdk",permalink:"/docs/next/connect/nodesdk/sdk",draft:!1,editUrl:"https://github.com/fonoster/routr-website/edit/main/docs/connect/nodesdk/sdk.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/docs/next/connect/nodesdk/overview"},next:{title:"Home or Office Setup",permalink:"/docs/next/connect/home-or-office-setup"}},p={},u=[{value:"ACL \u21d0 <code>APIClient</code>",id:"acl--apiclient",level:2},{value:"new ACL(options)",id:"new-acloptions",level:3},{value:"acL.createACL(request) \u21d2 <code>Promise.&lt;CreateACLResponse&gt;</code>",id:"aclcreateaclrequest--promisecreateaclresponse",level:3},{value:"acL.updateACL(request) \u21d2 <code>Promise.&lt;UpdateACLResponse&gt;</code>",id:"aclupdateaclrequest--promiseupdateaclresponse",level:3},{value:"acL.getACL(ref) \u21d2 <code>Promise.&lt;GetACLResponse&gt;</code>",id:"aclgetaclref--promisegetaclresponse",level:3},{value:"acL.deleteACL(ref) \u21d2 <code>Promise.&lt;void&gt;</code>",id:"acldeleteaclref--promisevoid",level:3},{value:"acL.listACLs(request) \u21d2 <code>Promise.&lt;ListACLResponse&gt;</code>",id:"acllistaclsrequest--promiselistaclresponse",level:3},{value:"Agents \u21d0 <code>APIClient</code>",id:"agents--apiclient",level:2},{value:"new Agents(options)",id:"new-agentsoptions",level:3},{value:"agents.createAgent(request) \u21d2 <code>Promise.&lt;CreateAgentResponse&gt;</code>",id:"agentscreateagentrequest--promisecreateagentresponse",level:3},{value:"agents.updateAgent(request) \u21d2 <code>Promise.&lt;UpdateAgentResponse&gt;</code>",id:"agentsupdateagentrequest--promiseupdateagentresponse",level:3},{value:"agents.getAgent(ref) \u21d2 <code>Promise.&lt;GetAgentResponse&gt;</code>",id:"agentsgetagentref--promisegetagentresponse",level:3},{value:"agents.deleteAgent(ref) \u21d2 <code>Promise.&lt;void&gt;</code>",id:"agentsdeleteagentref--promisevoid",level:3},{value:"agents.listAgents(request) \u21d2 <code>Promise.&lt;ListAgentResponse&gt;</code>",id:"agentslistagentsrequest--promiselistagentresponse",level:3},{value:"Credentials \u21d0 <code>APIClient</code>",id:"credentials--apiclient",level:2},{value:"new Credentials(options)",id:"new-credentialsoptions",level:3},{value:"credentials.createCredentials(request) \u21d2 <code>Promise.&lt;CreateCredentialsResponse&gt;</code>",id:"credentialscreatecredentialsrequest--promisecreatecredentialsresponse",level:3},{value:"credentials.updateCredentials(request) \u21d2 <code>Promise.&lt;UpdateCredentialsResponse&gt;</code>",id:"credentialsupdatecredentialsrequest--promiseupdatecredentialsresponse",level:3},{value:"credentials.getCredentials(ref) \u21d2 <code>Promise.&lt;GetCredentialsResponse&gt;</code>",id:"credentialsgetcredentialsref--promisegetcredentialsresponse",level:3},{value:"credentials.deleteCredentials(ref) \u21d2 <code>Promise.&lt;void&gt;</code>",id:"credentialsdeletecredentialsref--promisevoid",level:3},{value:"credentials.listCredentials(request) \u21d2 <code>Promise.&lt;ListCredentialsResponse&gt;</code>",id:"credentialslistcredentialsrequest--promiselistcredentialsresponse",level:3},{value:"Domains \u21d0 <code>APIClient</code>",id:"domains--apiclient",level:2},{value:"new Domains(options)",id:"new-domainsoptions",level:3},{value:"domains.createDomain(request) \u21d2 <code>Promise.&lt;CreateDomainResponse&gt;</code>",id:"domainscreatedomainrequest--promisecreatedomainresponse",level:3},{value:"domains.updateDomain(request) \u21d2 <code>Promise.&lt;UpdateDomainResponse&gt;</code>",id:"domainsupdatedomainrequest--promiseupdatedomainresponse",level:3},{value:"domains.getDomain(ref) \u21d2 <code>Promise.&lt;GetDomainResponse&gt;</code>",id:"domainsgetdomainref--promisegetdomainresponse",level:3},{value:"domains.deleteDomain(ref) \u21d2 <code>Promise.&lt;void&gt;</code>",id:"domainsdeletedomainref--promisevoid",level:3},{value:"domains.listDomains(request) \u21d2 <code>Promise.&lt;ListDomainResponse&gt;</code>",id:"domainslistdomainsrequest--promiselistdomainresponse",level:3},{value:"Numbers \u21d0 <code>APIClient</code>",id:"numbers--apiclient",level:2},{value:"new Numbers(options)",id:"new-numbersoptions",level:3},{value:"numbers.createNumber(request) \u21d2 <code>Promise.&lt;CreateNumberResponse&gt;</code>",id:"numberscreatenumberrequest--promisecreatenumberresponse",level:3},{value:"numbers.updateNumber(request) \u21d2 <code>Promise.&lt;UpdateNumberResponse&gt;</code>",id:"numbersupdatenumberrequest--promiseupdatenumberresponse",level:3},{value:"numbers.getNumber(ref) \u21d2 <code>Promise.&lt;GetNumberResponse&gt;</code>",id:"numbersgetnumberref--promisegetnumberresponse",level:3},{value:"numbers.deleteNumber(ref) \u21d2 <code>Promise.&lt;void&gt;</code>",id:"numbersdeletenumberref--promisevoid",level:3},{value:"numbers.listNumbers(request) \u21d2 <code>Promise.&lt;ListNumberResponse&gt;</code>",id:"numberslistnumbersrequest--promiselistnumberresponse",level:3},{value:"Peers \u21d0 <code>APIClient</code>",id:"peers--apiclient",level:2},{value:"new Peers(options)",id:"new-peersoptions",level:3},{value:"peers.createPeer(request) \u21d2 <code>Promise.&lt;CreatePeerResponse&gt;</code>",id:"peerscreatepeerrequest--promisecreatepeerresponse",level:3},{value:"peers.updatePeer(request) \u21d2 <code>Promise.&lt;UpdatePeerResponse&gt;</code>",id:"peersupdatepeerrequest--promiseupdatepeerresponse",level:3},{value:"peers.getPeer(ref) \u21d2 <code>Promise.&lt;GetPeerResponse&gt;</code>",id:"peersgetpeerref--promisegetpeerresponse",level:3},{value:"peers.deletePeer(ref) \u21d2 <code>Promise.&lt;void&gt;</code>",id:"peersdeletepeerref--promisevoid",level:3},{value:"peers.listPeers(request) \u21d2 <code>Promise.&lt;ListPeerResponse&gt;</code>",id:"peerslistpeersrequest--promiselistpeerresponse",level:3},{value:"Trunks \u21d0 <code>APIClient</code>",id:"trunks--apiclient",level:2},{value:"new Trunks(options)",id:"new-trunksoptions",level:3},{value:"trunks.createTrunk(request) \u21d2 <code>Promise.&lt;CreateTrunkResponse&gt;</code>",id:"trunkscreatetrunkrequest--promisecreatetrunkresponse",level:3},{value:"trunks.updateTrunk(request) \u21d2 <code>Promise.&lt;UpdateTrunkResponse&gt;</code>",id:"trunksupdatetrunkrequest--promiseupdatetrunkresponse",level:3},{value:"trunks.getTrunk(ref) \u21d2 <code>Promise.&lt;GetTrunkResponse&gt;</code>",id:"trunksgettrunkref--promisegettrunkresponse",level:3},{value:"trunks.deleteTrunk(ref) \u21d2 <code>Promise.&lt;void&gt;</code>",id:"trunksdeletetrunkref--promisevoid",level:3},{value:"trunks.listTrunks(request) \u21d2 <code>Promise.&lt;ListTrunkResponse&gt;</code>",id:"trunkslisttrunksrequest--promiselisttrunkresponse",level:3}],i={toc:u},d="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"sdk"},"SDK"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#installation"},"Installation")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#apis"},"APIs"))),(0,r.kt)("h1",{id:"installation"},"Installation"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh-session"},"$ npm install --save @routr/sdk\n")),(0,r.kt)("h1",{id:"apis"},"APIs"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#ACL"},(0,r.kt)("inlineCode",{parentName:"a"},"Access Control List"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Agents"},(0,r.kt)("inlineCode",{parentName:"a"},"Agents"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Credentials"},(0,r.kt)("inlineCode",{parentName:"a"},"Credentials"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Domains"},(0,r.kt)("inlineCode",{parentName:"a"},"Domains"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Numbers"},(0,r.kt)("inlineCode",{parentName:"a"},"Numbers"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Peers"},(0,r.kt)("inlineCode",{parentName:"a"},"Peers"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Trunks"},(0,r.kt)("inlineCode",{parentName:"a"},"Trunks")))),(0,r.kt)("a",{name:"ACL"}),(0,r.kt)("h2",{id:"acl--apiclient"},"ACL \u21d0 ",(0,r.kt)("code",null,"APIClient")),(0,r.kt)("p",null,"Use Routr ACL, a capability of Routr SIP Proxy, to create, update, get\nand delete Access Control Lists. The ACL API requires of a running Routr deployment."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": global class",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Extends"),": ",(0,r.kt)("code",null,"APIClient"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"See"),": module:core:APIClient  "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#ACL"},"ACL")," \u21d0 ",(0,r.kt)("code",null,"APIClient"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#new_ACL_new"},"new ACL(options)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#ACL+createACL"},".createACL(request)")," \u21d2 ",(0,r.kt)("code",null,"Promise.","<","CreateACLResponse",">")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#ACL+updateACL"},".updateACL(request)")," \u21d2 ",(0,r.kt)("code",null,"Promise.","<","UpdateACLResponse",">")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#ACL+getACL"},".getACL(ref)")," \u21d2 ",(0,r.kt)("code",null,"Promise.","<","GetACLResponse",">")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#ACL+deleteACL"},".deleteACL(ref)")," \u21d2 ",(0,r.kt)("code",null,"Promise.","<","void",">")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#ACL+listACLs"},".listACLs(request)")," \u21d2 ",(0,r.kt)("code",null,"Promise.","<","ListACLResponse",">"))))),(0,r.kt)("a",{name:"new_ACL_new"}),(0,r.kt)("h3",{id:"new-acloptions"},"new ACL(options)"),(0,r.kt)("p",null,"Constructs a new ACL API object."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"ClientOptions")),(0,r.kt)("td",{parentName:"tr",align:null},"Options to indicate the objects endpoint")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const SDK = require("@routr/sdk")\nconst acl = new SDK.ACL()\n\nconst request = {\n  name: "Peer network",\n  allow: "27.116.56.0/22",\n  deny: "0.0.0.0/0"\n}\n\nacl.createACL(request)\n  .then(console.log)\n  .catch(console.error)   // an error occurred\n')),(0,r.kt)("a",{name:"ACL+createACL"}),(0,r.kt)("h3",{id:"aclcreateaclrequest--promisecreateaclresponse"},"acL.createACL(request) \u21d2 ",(0,r.kt)("code",null,"Promise.","<","CreateACLResponse",">")),(0,r.kt)("p",null,"Creates a new AccessControlList on Routr."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#ACL"},(0,r.kt)("code",null,"ACL")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Returns"),": ",(0,r.kt)("code",null,"Promise.","<","CreateACLResponse",">")," - The newly created AccessControlList",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Throws"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"if request is null")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"CreateACLRequest")),(0,r.kt)("td",{parentName:"tr",align:null},"The request to create an ACL")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.name"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the ACL")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.allow"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Array.","<","string",">")),(0,r.kt)("td",{parentName:"tr",align:null},"List of IP addresses or CIDR blocks to allow")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.deny"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Array.","<","string",">")),(0,r.kt)("td",{parentName:"tr",align:null},"List of IP addresses or CIDR blocks to deny")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.extended"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Object")),(0,r.kt)("td",{parentName:"tr",align:null},"Optional extended attributes")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const request = {\n  name: "Peer network",\n  allow: "27.116.56.0/22",\n  deny: "0.0.0.0/0"\n}\n\nacl.createACL(request)\n  .then(console.log)\n  .catch(console.error)   // an error occurred\n')),(0,r.kt)("a",{name:"ACL+updateACL"}),(0,r.kt)("h3",{id:"aclupdateaclrequest--promiseupdateaclresponse"},"acL.updateACL(request) \u21d2 ",(0,r.kt)("code",null,"Promise.","<","UpdateACLResponse",">")),(0,r.kt)("p",null,"Updates an already existing AccessControlList on Routr."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#ACL"},(0,r.kt)("code",null,"ACL")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Returns"),": ",(0,r.kt)("code",null,"Promise.","<","UpdateACLResponse",">")," - The AccessControlList  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"UpdateACLRequest")),(0,r.kt)("td",{parentName:"tr",align:null},"Partial with the fields to update")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.name"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the ACL")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.allow"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Array.","<","string",">")),(0,r.kt)("td",{parentName:"tr",align:null},"List of IP addresses or CIDR blocks to allow")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.deny"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Array.","<","string",">")),(0,r.kt)("td",{parentName:"tr",align:null},"List of IP addresses or CIDR blocks to deny")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.extended"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Object")),(0,r.kt)("td",{parentName:"tr",align:null},"Optional extended attributes")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const request = {\n  ref: "4671371b-ff5d-48b1-aabe-d3c5ca5317a3",\n  name: "Peer network updated",\n}\n\nacl.updateACL(request)\n  .then(console.log)\n  .catch(console.error)   // an error occurred\n')),(0,r.kt)("a",{name:"ACL+getACL"}),(0,r.kt)("h3",{id:"aclgetaclref--promisegetaclresponse"},"acL.getACL(ref) \u21d2 ",(0,r.kt)("code",null,"Promise.","<","GetACLResponse",">")),(0,r.kt)("p",null,"Gets an AccessControlList from Routr."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#ACL"},(0,r.kt)("code",null,"ACL")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Returns"),": ",(0,r.kt)("code",null,"Promise.","<","GetACLResponse",">")," - The AccessControlList  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ref"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The ACL reference")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const ref = "4671371b-ff5d-48b1-aabe-d3c5ca5317a3"\n\nacl.getACL(ref)\n  .then(console.log)\n  .catch(console.error)   // an error occurred\n')),(0,r.kt)("a",{name:"ACL+deleteACL"}),(0,r.kt)("h3",{id:"acldeleteaclref--promisevoid"},"acL.deleteACL(ref) \u21d2 ",(0,r.kt)("code",null,"Promise.","<","void",">")),(0,r.kt)("p",null,"Deletes an AccessControlList from Routr."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#ACL"},(0,r.kt)("code",null,"ACL")),"  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ref"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The ACL reference")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const ref = "4671371b-ff5d-48b1-aabe-d3c5ca5317a3"\n\nacl.deleteACL(ref)\n  .then(console.log)\n  .catch(console.error)   // an error occurred\n')),(0,r.kt)("a",{name:"ACL+listACLs"}),(0,r.kt)("h3",{id:"acllistaclsrequest--promiselistaclresponse"},"acL.listACLs(request) \u21d2 ",(0,r.kt)("code",null,"Promise.","<","ListACLResponse",">")),(0,r.kt)("p",null,"Lists all AccessControlLists from Routr with pagination."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#ACL"},(0,r.kt)("code",null,"ACL")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Returns"),": ",(0,r.kt)("code",null,"Promise.","<","ListACLResponse",">")," - The list of AccessControlLists  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"ListACLRequest")),(0,r.kt)("td",{parentName:"tr",align:null},"The request to list ACLs")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.pageSize"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The number of ACLs to return")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.pageToken"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The page token to use for pagination")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const request = {\n pageSize: 10\n}\n\nacl.listACLs(request)\n  .then(console.log)\n  .catch(console.error)   // an error occurred\n")),(0,r.kt)("a",{name:"Agents"}),(0,r.kt)("h2",{id:"agents--apiclient"},"Agents \u21d0 ",(0,r.kt)("code",null,"APIClient")),(0,r.kt)("p",null,"Use Routr Agents, a capability of Routr SIP Proxy, to create, update, get\nand delete Agents. The Agents API requires of a running Routr deployment."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": global class",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Extends"),": ",(0,r.kt)("code",null,"APIClient"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"See"),": module:core:APIClient  "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Agents"},"Agents")," \u21d0 ",(0,r.kt)("code",null,"APIClient"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#new_Agents_new"},"new Agents(options)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Agents+createAgent"},".createAgent(request)")," \u21d2 ",(0,r.kt)("code",null,"Promise.","<","CreateAgentResponse",">")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Agents+updateAgent"},".updateAgent(request)")," \u21d2 ",(0,r.kt)("code",null,"Promise.","<","UpdateAgentResponse",">")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Agents+getAgent"},".getAgent(ref)")," \u21d2 ",(0,r.kt)("code",null,"Promise.","<","GetAgentResponse",">")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Agents+deleteAgent"},".deleteAgent(ref)")," \u21d2 ",(0,r.kt)("code",null,"Promise.","<","void",">")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Agents+listAgents"},".listAgents(request)")," \u21d2 ",(0,r.kt)("code",null,"Promise.","<","ListAgentResponse",">"))))),(0,r.kt)("a",{name:"new_Agents_new"}),(0,r.kt)("h3",{id:"new-agentsoptions"},"new Agents(options)"),(0,r.kt)("p",null,"Constructs a new Agent API object."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"ClientOptions")),(0,r.kt)("td",{parentName:"tr",align:null},"Options to indicate the objects endpoint")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const SDK = require("@routr/sdk")\nconst agents = new SDK.Agents()\n\nconst request = {\n  name: "Jonh Doe",\n  username: "jdoe",\n  privacy: Privacy.PRIVATE,\n  domainRef: "4671371b-ff5d-48b1-aabe-d3c5ca5317a3",\n  credentialsRef: "4671371b-ff5d-48b1-aabe-d3c5ca5317a3",\n  enabled: true,\n  extended: {\n    "key": "value"\n  }\n}\n\nagents.createAgent(request)\n  .then(console.log)\n  .catch(console.error)   // an error occurred\n')),(0,r.kt)("a",{name:"Agents+createAgent"}),(0,r.kt)("h3",{id:"agentscreateagentrequest--promisecreateagentresponse"},"agents.createAgent(request) \u21d2 ",(0,r.kt)("code",null,"Promise.","<","CreateAgentResponse",">")),(0,r.kt)("p",null,"Creates a new Agent on Routr."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#Agents"},(0,r.kt)("code",null,"Agents")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Returns"),": ",(0,r.kt)("code",null,"Promise.","<","CreateAgentResponse",">")," - The newly created Agent",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Throws"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"if request is null")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"CreateAgentRequest")),(0,r.kt)("td",{parentName:"tr",align:null},"The request to create an Agent")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.name"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the Agent")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.username"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Username of the Agent")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.privacy"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Privacy")),(0,r.kt)("td",{parentName:"tr",align:null},"Privacy of the Agent (e.g., Privacy.PRIVATE)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.domainRef"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Domain reference of the Domain the Agent belongs to")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.credentialsRef"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Credentials reference of the Credentials for the Agent")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.enabled"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"Whether the Agent is enabled or not (for future use)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.extended"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Object")),(0,r.kt)("td",{parentName:"tr",align:null},"Optional extended attributes")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const request = {\n  name: "Jonh Doe",\n  username: "jdoe",\n  privacy: Privacy.PRIVATE,\n  domainRef: "4671371b-ff5d-48b1-aabe-d3c5ca5317a3",\n  credentialsRef: "4671371b-ff5d-48b1-aabe-d3c5ca5317a3",\n  enabled: true,\n  extended: {\n    "key": "value"\n  }\n}\n\nagents.createAgent(request)\n  .then(console.log)\n  .catch(console.error)   // an error occurred\n')),(0,r.kt)("a",{name:"Agents+updateAgent"}),(0,r.kt)("h3",{id:"agentsupdateagentrequest--promiseupdateagentresponse"},"agents.updateAgent(request) \u21d2 ",(0,r.kt)("code",null,"Promise.","<","UpdateAgentResponse",">")),(0,r.kt)("p",null,"Updates an already existing Agent on Routr."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#Agents"},(0,r.kt)("code",null,"Agents")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Returns"),": ",(0,r.kt)("code",null,"Promise.","<","UpdateAgentResponse",">")," - The updated Agent  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"UpdateAgentRequest")),(0,r.kt)("td",{parentName:"tr",align:null},"Partial with the fields to update")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.name"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the Agent")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.privacy"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Privacy")),(0,r.kt)("td",{parentName:"tr",align:null},"Privacy of the Agent (e.g., Privacy.PRIVATE)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.domainRef"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Domain reference of the Domain the Agent belongs to")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.credentialsRef"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Credentials reference of the Credentials for the Agent")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.enabled"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"Whether the Agent is enabled or not (for future use)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.extended"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Object")),(0,r.kt)("td",{parentName:"tr",align:null},"Optional extended attributes")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const request = {\n  ref: "4671371b-ff5d-48b1-aabe-d3c5ca5317a3",\n  name: "John D Doe",\n  enabled: false\n}\n\nagents.updateAgent(request)\n  .then(console.log)\n  .catch(console.error)   // an error occurred\n')),(0,r.kt)("a",{name:"Agents+getAgent"}),(0,r.kt)("h3",{id:"agentsgetagentref--promisegetagentresponse"},"agents.getAgent(ref) \u21d2 ",(0,r.kt)("code",null,"Promise.","<","GetAgentResponse",">")),(0,r.kt)("p",null,"Gets an Agent from Routr."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#Agents"},(0,r.kt)("code",null,"Agents")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Returns"),": ",(0,r.kt)("code",null,"Promise.","<","GetAgentResponse",">")," - The Agent  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ref"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The Agent's reference")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const ref = "4671371b-ff5d-48b1-aabe-d3c5ca5317a3"\n\nagents.getAgent(ref)\n  .then(console.log)\n  .catch(console.error)   // an error occurred\n')),(0,r.kt)("a",{name:"Agents+deleteAgent"}),(0,r.kt)("h3",{id:"agentsdeleteagentref--promisevoid"},"agents.deleteAgent(ref) \u21d2 ",(0,r.kt)("code",null,"Promise.","<","void",">")),(0,r.kt)("p",null,"Deletes an Agent from Routr."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#Agents"},(0,r.kt)("code",null,"Agents")),"  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ref"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The Agent's reference")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const ref = "4671371b-ff5d-48b1-aabe-d3c5ca5317a3"\n\nagents.deleteAgent(ref)\n  .then(console.log)\n  .catch(console.error)   // an error occurred\n')),(0,r.kt)("a",{name:"Agents+listAgents"}),(0,r.kt)("h3",{id:"agentslistagentsrequest--promiselistagentresponse"},"agents.listAgents(request) \u21d2 ",(0,r.kt)("code",null,"Promise.","<","ListAgentResponse",">")),(0,r.kt)("p",null,"Lists all Agents from Routr with pagination."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#Agents"},(0,r.kt)("code",null,"Agents")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Returns"),": ",(0,r.kt)("code",null,"Promise.","<","ListAgentResponse",">")," - The list of Agents in the current page  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"ListAgentRequest")),(0,r.kt)("td",{parentName:"tr",align:null},"The request to list Agents")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.pageSize"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The number of Agents to return")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.pageToken"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The page token to use for pagination")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const request = {\n pageSize: 10\n}\n\nagents.listAgents(request)\n  .then(console.log)\n  .catch(console.error)   // an error occurred\n")),(0,r.kt)("a",{name:"Credentials"}),(0,r.kt)("h2",{id:"credentials--apiclient"},"Credentials \u21d0 ",(0,r.kt)("code",null,"APIClient")),(0,r.kt)("p",null,"Use Routr Credentials, a capability of Routr SIP Proxy, to create, update, get\nand delete Credentials. The Credentials API requires of a running Routr deployment."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": global class",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Extends"),": ",(0,r.kt)("code",null,"APIClient"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"See"),": module:core:APIClient  "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Credentials"},"Credentials")," \u21d0 ",(0,r.kt)("code",null,"APIClient"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#new_Credentials_new"},"new Credentials(options)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Credentials+createCredentials"},".createCredentials(request)")," \u21d2 ",(0,r.kt)("code",null,"Promise.","<","CreateCredentialsResponse",">")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Credentials+updateCredentials"},".updateCredentials(request)")," \u21d2 ",(0,r.kt)("code",null,"Promise.","<","UpdateCredentialsResponse",">")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Credentials+getCredentials"},".getCredentials(ref)")," \u21d2 ",(0,r.kt)("code",null,"Promise.","<","GetCredentialsResponse",">")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Credentials+deleteCredentials"},".deleteCredentials(ref)")," \u21d2 ",(0,r.kt)("code",null,"Promise.","<","void",">")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Credentials+listCredentials"},".listCredentials(request)")," \u21d2 ",(0,r.kt)("code",null,"Promise.","<","ListCredentialsResponse",">"))))),(0,r.kt)("a",{name:"new_Credentials_new"}),(0,r.kt)("h3",{id:"new-credentialsoptions"},"new Credentials(options)"),(0,r.kt)("p",null,"Constructs a new Credentials API object."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"ClientOptions")),(0,r.kt)("td",{parentName:"tr",align:null},"Options to indicate the objects endpoint")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const SDK = require("@routr/sdk")\nconst credentials = new SDK.Credentials()\n\nconst request = {\n  name: "Credentials for John Doe",\n  username: "jdoe",\n  password: "123456",\n  extended: {\n    "key": "value"\n  }\n}\n\ncredentials.createCredentials(request)\n  .then(console.log)\n  .catch(console.error)   // an error occurred\n')),(0,r.kt)("a",{name:"Credentials+createCredentials"}),(0,r.kt)("h3",{id:"credentialscreatecredentialsrequest--promisecreatecredentialsresponse"},"credentials.createCredentials(request) \u21d2 ",(0,r.kt)("code",null,"Promise.","<","CreateCredentialsResponse",">")),(0,r.kt)("p",null,"Creates a new Credentials on Routr."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#Credentials"},(0,r.kt)("code",null,"Credentials")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Returns"),": ",(0,r.kt)("code",null,"Promise.","<","CreateCredentialsResponse",">")," - The newly created Credentials",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Throws"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"if request is null")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"CreateCredentialsRequest")),(0,r.kt)("td",{parentName:"tr",align:null},"The request to create an Credentials")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.name"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The friendly name of the Credentials")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.username"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Username of the Credentials")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.password"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Password of the Credentials")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.extended"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Object")),(0,r.kt)("td",{parentName:"tr",align:null},"Optional extended attributes")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const request = {\n  name: "Credentials for John Doe",\n  username: "jdoe",\n  password: "123456",\n  extended: {\n    "key": "value"\n  }\n}\n\ncredentials.createCredentials(request)\n  .then(console.log)\n  .catch(console.error)   // an error occurred\n')),(0,r.kt)("a",{name:"Credentials+updateCredentials"}),(0,r.kt)("h3",{id:"credentialsupdatecredentialsrequest--promiseupdatecredentialsresponse"},"credentials.updateCredentials(request) \u21d2 ",(0,r.kt)("code",null,"Promise.","<","UpdateCredentialsResponse",">")),(0,r.kt)("p",null,"Updates an already existing Credentials on Routr."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#Credentials"},(0,r.kt)("code",null,"Credentials")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Returns"),": ",(0,r.kt)("code",null,"Promise.","<","UpdateCredentialsResponse",">")," - The updated Credentials  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"UpdateCredentialsRequest")),(0,r.kt)("td",{parentName:"tr",align:null},"Partial with the fields to update")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.name"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The friendly name of the Credentials")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.username"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Username of the Credentials")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.password"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Password of the Credentials")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.extended"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Object")),(0,r.kt)("td",{parentName:"tr",align:null},"Optional extended attributes")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const request = {\n  ref: "4671371b-ff5d-48b1-aabe-d3c5ca5317a3",\n  name: "John Doe\'s Credentials"\n}\n\ncredentials.updateCredentials(request)\n  .then(console.log)\n  .catch(console.error)   // an error occurred\n')),(0,r.kt)("a",{name:"Credentials+getCredentials"}),(0,r.kt)("h3",{id:"credentialsgetcredentialsref--promisegetcredentialsresponse"},"credentials.getCredentials(ref) \u21d2 ",(0,r.kt)("code",null,"Promise.","<","GetCredentialsResponse",">")),(0,r.kt)("p",null,"Gets an Credentials from Routr."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#Credentials"},(0,r.kt)("code",null,"Credentials")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Returns"),": ",(0,r.kt)("code",null,"Promise.","<","GetCredentialsResponse",">")," - The Credentials  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ref"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The Credentials's reference")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const ref = "4671371b-ff5d-48b1-aabe-d3c5ca5317a3"\n\ncredentials.getCredentials(ref)\n  .then(console.log)\n  .catch(console.error)   // an error occurred\n')),(0,r.kt)("a",{name:"Credentials+deleteCredentials"}),(0,r.kt)("h3",{id:"credentialsdeletecredentialsref--promisevoid"},"credentials.deleteCredentials(ref) \u21d2 ",(0,r.kt)("code",null,"Promise.","<","void",">")),(0,r.kt)("p",null,"Deletes an Credentials from Routr."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#Credentials"},(0,r.kt)("code",null,"Credentials")),"  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ref"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The Credentials's reference")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const ref = "4671371b-ff5d-48b1-aabe-d3c5ca5317a3"\n\ncredentials.deleteCredentials(ref)\n  .then(console.log)\n  .catch(console.error)   // an error occurred\n')),(0,r.kt)("a",{name:"Credentials+listCredentials"}),(0,r.kt)("h3",{id:"credentialslistcredentialsrequest--promiselistcredentialsresponse"},"credentials.listCredentials(request) \u21d2 ",(0,r.kt)("code",null,"Promise.","<","ListCredentialsResponse",">")),(0,r.kt)("p",null,"Lists all Credentials from Routr with pagination."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#Credentials"},(0,r.kt)("code",null,"Credentials")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Returns"),": ",(0,r.kt)("code",null,"Promise.","<","ListCredentialsResponse",">")," - The list of Credentials in the current page  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"ListCredentialsRequest")),(0,r.kt)("td",{parentName:"tr",align:null},"The request to list Credentials")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.pageSize"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The number of Credentials to return")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.pageToken"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The page token to use for pagination")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const request = {\n pageSize: 10\n}\n\ncredentials.listCredentials(request)\n  .then(console.log)\n  .catch(console.error)   // an error occurred\n")),(0,r.kt)("a",{name:"Domains"}),(0,r.kt)("h2",{id:"domains--apiclient"},"Domains \u21d0 ",(0,r.kt)("code",null,"APIClient")),(0,r.kt)("p",null,"Use Routr Domains, a capability of Routr SIP Proxy, to create, update, get\nand delete Domains. The Domains API requires of a running Routr deployment."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": global class",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Extends"),": ",(0,r.kt)("code",null,"APIClient"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"See"),": module:core:APIClient  "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Domains"},"Domains")," \u21d0 ",(0,r.kt)("code",null,"APIClient"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#new_Domains_new"},"new Domains(options)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Domains+createDomain"},".createDomain(request)")," \u21d2 ",(0,r.kt)("code",null,"Promise.","<","CreateDomainResponse",">")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Domains+updateDomain"},".updateDomain(request)")," \u21d2 ",(0,r.kt)("code",null,"Promise.","<","UpdateDomainResponse",">")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Domains+getDomain"},".getDomain(ref)")," \u21d2 ",(0,r.kt)("code",null,"Promise.","<","GetDomainResponse",">")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Domains+deleteDomain"},".deleteDomain(ref)")," \u21d2 ",(0,r.kt)("code",null,"Promise.","<","void",">")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Domains+listDomains"},".listDomains(request)")," \u21d2 ",(0,r.kt)("code",null,"Promise.","<","ListDomainResponse",">"))))),(0,r.kt)("a",{name:"new_Domains_new"}),(0,r.kt)("h3",{id:"new-domainsoptions"},"new Domains(options)"),(0,r.kt)("p",null,"Constructs a new Domain API object."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"ClientOptions")),(0,r.kt)("td",{parentName:"tr",align:null},"Options to indicate the objects endpoint")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const SDK = require("@routr/sdk")\nconst domains = new SDK.Domains()\n\nconst request = {\n  name: "Local domain",\n  domainUri: "sip.local",\n  accessControlListRef: "4671371b-ff5d-48b1-aabe-d3c5ca5317a3",\n  egressPolicies: [{\n    rule: ".*",\n    numberRef: "4671371b-ff5d-48b1-aabe-d3c5ca5317a3"\n  }],\n  extended: {\n    "key": "value"\n  }\n}\n\ndomains.createDomain(request)\n  .then(console.log)\n  .catch(console.error)   // an error occurred\n')),(0,r.kt)("a",{name:"Domains+createDomain"}),(0,r.kt)("h3",{id:"domainscreatedomainrequest--promisecreatedomainresponse"},"domains.createDomain(request) \u21d2 ",(0,r.kt)("code",null,"Promise.","<","CreateDomainResponse",">")),(0,r.kt)("p",null,"Creates a new Domain on Routr."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#Domains"},(0,r.kt)("code",null,"Domains")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Returns"),": ",(0,r.kt)("code",null,"Promise.","<","CreateDomainResponse",">")," - The newly created Domain",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Throws"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"if request is null")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"CreateDomainRequest")),(0,r.kt)("td",{parentName:"tr",align:null},"The request to create an Domain")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.name"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the Domain")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.domainUri"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The FQDN of the Domain")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.accessControlListRef"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The reference to the AccessControlList for the Domain")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.egressPolicies"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Array.","<","CC.EgressPolicy",">")),(0,r.kt)("td",{parentName:"tr",align:null},"The list of EgressPolicies for the Domain")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.extended"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Optional extended attributes")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const request = {\n  name: "Local domain",\n  domainUri: "sip.local",\n  accessControlListRef: "4671371b-ff5d-48b1-aabe-d3c5ca5317a3",\n  egressPolicies: [{\n    rule: ".*",\n    numberRef: "4671371b-ff5d-48b1-aabe-d3c5ca5317a3"\n  }],\n  extended: {\n    "key": "value"\n  }\n}\n\ndomains.createDomain(request)\n  .then(console.log)\n  .catch(console.error)   // an error occurred\n')),(0,r.kt)("a",{name:"Domains+updateDomain"}),(0,r.kt)("h3",{id:"domainsupdatedomainrequest--promiseupdatedomainresponse"},"domains.updateDomain(request) \u21d2 ",(0,r.kt)("code",null,"Promise.","<","UpdateDomainResponse",">")),(0,r.kt)("p",null,"Updates an already existing Domain on Routr."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#Domains"},(0,r.kt)("code",null,"Domains")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Returns"),": ",(0,r.kt)("code",null,"Promise.","<","UpdateDomainResponse",">")," - The updated Domain  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"UpdateDomainRequest")),(0,r.kt)("td",{parentName:"tr",align:null},"Partial with the fields to update")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.name"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the Domain")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.accessControlListRef"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The reference to the AccessControlList for the Domain")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.egressPolicies"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Array.","<","CC.EgressPolicy",">")),(0,r.kt)("td",{parentName:"tr",align:null},"The list of EgressPolicies for the Domain")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.extended"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Optional extended attributes")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const request = {\n  name: "Local domain updated",\n  accessControlListRef: "4671371b-ff5d-48b1-aabe-d3c5ca5317a3"\n}\n\ndomains.updateDomain(request)\n  .then(console.log)\n  .catch(console.error)   // an error occurred\n')),(0,r.kt)("a",{name:"Domains+getDomain"}),(0,r.kt)("h3",{id:"domainsgetdomainref--promisegetdomainresponse"},"domains.getDomain(ref) \u21d2 ",(0,r.kt)("code",null,"Promise.","<","GetDomainResponse",">")),(0,r.kt)("p",null,"Gets a Domain from Routr."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#Domains"},(0,r.kt)("code",null,"Domains")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Returns"),": ",(0,r.kt)("code",null,"Promise.","<","GetDomainResponse",">")," - The Domain  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ref"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The Domain's reference")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const ref = "4671371b-ff5d-48b1-aabe-d3c5ca5317a3"\n\ndomains.getDomain(ref)\n  .then(console.log)\n  .catch(console.error)   // an error occurred\n')),(0,r.kt)("a",{name:"Domains+deleteDomain"}),(0,r.kt)("h3",{id:"domainsdeletedomainref--promisevoid"},"domains.deleteDomain(ref) \u21d2 ",(0,r.kt)("code",null,"Promise.","<","void",">")),(0,r.kt)("p",null,"Deletes a Domain from Routr."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#Domains"},(0,r.kt)("code",null,"Domains")),"  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ref"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The Domain's reference")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const ref = "4671371b-ff5d-48b1-aabe-d3c5ca5317a3"\n\ndomains.deleteDomain(ref)\n  .then(console.log)\n  .catch(console.error)   // an error occurred\n')),(0,r.kt)("a",{name:"Domains+listDomains"}),(0,r.kt)("h3",{id:"domainslistdomainsrequest--promiselistdomainresponse"},"domains.listDomains(request) \u21d2 ",(0,r.kt)("code",null,"Promise.","<","ListDomainResponse",">")),(0,r.kt)("p",null,"Lists all Domains from Routr with pagination."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#Domains"},(0,r.kt)("code",null,"Domains")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Returns"),": ",(0,r.kt)("code",null,"Promise.","<","ListDomainResponse",">")," - The list of Domains  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"ListDomainRequest")),(0,r.kt)("td",{parentName:"tr",align:null},"The request to list Domains")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.pageSize"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The number of Domains to return")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.pageToken"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The page token to use for pagination")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const request = {\n  pageSize: 10\n}\n\ndomains.listDomains(request)\n  .then(console.log)\n  .catch(console.error)   // an error occurred\n")),(0,r.kt)("a",{name:"Numbers"}),(0,r.kt)("h2",{id:"numbers--apiclient"},"Numbers \u21d0 ",(0,r.kt)("code",null,"APIClient")),(0,r.kt)("p",null,"Use Routr Numbers, a capability of Routr SIP Proxy, to create, update, get\nand delete Numbers. The Number API requires of a running Routr deployment."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": global class",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Extends"),": ",(0,r.kt)("code",null,"APIClient"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"See"),": module:core:APIClient  "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Numbers"},"Numbers")," \u21d0 ",(0,r.kt)("code",null,"APIClient"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#new_Numbers_new"},"new Numbers(options)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Numbers+createNumber"},".createNumber(request)")," \u21d2 ",(0,r.kt)("code",null,"Promise.","<","CreateNumberResponse",">")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Numbers+updateNumber"},".updateNumber(request)")," \u21d2 ",(0,r.kt)("code",null,"Promise.","<","UpdateNumberResponse",">")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Numbers+getNumber"},".getNumber(ref)")," \u21d2 ",(0,r.kt)("code",null,"Promise.","<","GetNumberResponse",">")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Numbers+deleteNumber"},".deleteNumber(ref)")," \u21d2 ",(0,r.kt)("code",null,"Promise.","<","void",">")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Numbers+listNumbers"},".listNumbers(request)")," \u21d2 ",(0,r.kt)("code",null,"Promise.","<","ListNumberResponse",">"))))),(0,r.kt)("a",{name:"new_Numbers_new"}),(0,r.kt)("h3",{id:"new-numbersoptions"},"new Numbers(options)"),(0,r.kt)("p",null,"Constructs a new Number API object."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"ClientOptions")),(0,r.kt)("td",{parentName:"tr",align:null},"Options to indicate the objects endpoint")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const SDK = require("@routr/sdk")\nconst numbers = new SDK.Numbers()\n\nconst request = {\n  name: "(415) 555-1212",\n  telUrl: "teL:+14155551212",\n  trunkRef: "6f941c63-880c-419a-a72a-4a107cbaf5c5",\n  aorLink: "sip:100@sip.local",\n  city: "San Francisco",\n  country: "United States",\n  countryISOCode: "US",\n  sessionAffinityHeader: "X-Room-Id"\n  extraHeaders: [{\n    name: "X-Room-Id",\n    value: "abc-us-123"\n  }],\n  extended: {\n    "key": "value"\n  }\n}\n\nnumbers.createNumber(request)\n  .then(console.log)\n  .catch(console.error)   // an error occurred\n')),(0,r.kt)("a",{name:"Numbers+createNumber"}),(0,r.kt)("h3",{id:"numberscreatenumberrequest--promisecreatenumberresponse"},"numbers.createNumber(request) \u21d2 ",(0,r.kt)("code",null,"Promise.","<","CreateNumberResponse",">")),(0,r.kt)("p",null,"Creates a new Number on Routr."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#Numbers"},(0,r.kt)("code",null,"Numbers")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Returns"),": ",(0,r.kt)("code",null,"Promise.","<","CreateNumberResponse",">")," - The newly created Number",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Throws"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"if request is null")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"CreateNumberRequest")),(0,r.kt)("td",{parentName:"tr",align:null},"The request to create an Number")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.name"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the Number")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.telUrl"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The number URI to be used (e.g., te:+1234567890)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.aorLink"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The AOR link to be used (e.g., sip:",(0,r.kt)("a",{parentName:"td",href:"mailto:1001@sip.local"},"1001@sip.local"),")")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.city"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The city where the number is located")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.country"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The country where the number is located")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.countryISOCode"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The country ISO code where the number is located")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.extraHeaders"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Array.","<","Object",">")),(0,r.kt)("td",{parentName:"tr",align:null},"Extra headers to be used (e.g., ",'[{name: "X-Room-Id", value: "abc-us-123"}]',")")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.trunkRef"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The Trunk reference to be used")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.sessionAffinityHeader"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Optional session affinity header")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.extended"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Optional extended attributes")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const request = {\n  name: "(415) 555-1212",\n  telUrl: "teL:+14155551212",\n  trunkRef: "6f941c63-880c-419a-a72a-4a107cbaf5c5",\n  aorLink: "sip:100@sip.local",\n  city: "San Francisco",\n  country: "United States",\n  countryISOCode: "US",\n  sessionAffinityHeader: "X-Room-Id"\n  extraHeaders: [{\n    name: "X-Room-Id",\n    value: "abc-us-123"\n  }],\n  extended: {\n    "key": "value"\n  }\n}\n\nnumbers.createNumber(request)\n  .then(console.log)\n  .catch(console.error)   // an error occurred\n')),(0,r.kt)("a",{name:"Numbers+updateNumber"}),(0,r.kt)("h3",{id:"numbersupdatenumberrequest--promiseupdatenumberresponse"},"numbers.updateNumber(request) \u21d2 ",(0,r.kt)("code",null,"Promise.","<","UpdateNumberResponse",">")),(0,r.kt)("p",null,"Updates an already existing Number on Routr."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#Numbers"},(0,r.kt)("code",null,"Numbers")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Returns"),": ",(0,r.kt)("code",null,"Promise.","<","UpdateNumberResponse",">")," - The updated Number  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"UpdateNumberRequest")),(0,r.kt)("td",{parentName:"tr",align:null},"Partial with the fields to update")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.name"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the Number")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.aorLink"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The AOR link to be used (e.g., sip:",(0,r.kt)("a",{parentName:"td",href:"mailto:1001@sip.local"},"1001@sip.local"),")")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.extraHeaders"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Array.","<","Object",">")),(0,r.kt)("td",{parentName:"tr",align:null},"Extra headers to be used (e.g., ",'[{name: "X-Room-Id", value: "abc-us-123"}]',")")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.trunkRef"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The Trunk reference to be used")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.sessionAffinityHeader"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Optional session affinity header")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.extended"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Optional extended attributes")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const request = {\n  name: "(415) 555-1212 (friendly name)",\n  aorLink: "sip:2001@sip.local"\n}\n\nnumbers.updateNumber(request)\n  .then(console.log)\n  .catch(console.error)   // an error occurred\n')),(0,r.kt)("a",{name:"Numbers+getNumber"}),(0,r.kt)("h3",{id:"numbersgetnumberref--promisegetnumberresponse"},"numbers.getNumber(ref) \u21d2 ",(0,r.kt)("code",null,"Promise.","<","GetNumberResponse",">")),(0,r.kt)("p",null,"Gets a Number from Routr."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#Numbers"},(0,r.kt)("code",null,"Numbers")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Returns"),": ",(0,r.kt)("code",null,"Promise.","<","GetNumberResponse",">")," - The Number  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ref"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The Number's reference")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const ref = "4671371b-ff5d-48b1-aabe-d3c5ca5317a3"\n\nnumbers.getNumber(ref)\n  .then(console.log)\n  .catch(console.error)   // an error occurred\n')),(0,r.kt)("a",{name:"Numbers+deleteNumber"}),(0,r.kt)("h3",{id:"numbersdeletenumberref--promisevoid"},"numbers.deleteNumber(ref) \u21d2 ",(0,r.kt)("code",null,"Promise.","<","void",">")),(0,r.kt)("p",null,"Deletes a Number from Routr."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#Numbers"},(0,r.kt)("code",null,"Numbers")),"  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ref"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The Number's reference")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const ref = "4671371b-ff5d-48b1-aabe-d3c5ca5317a3"\n\nnumbers.deleteNumber(ref)\n  .then(console.log)\n  .catch(console.error)   // an error occurred\n')),(0,r.kt)("a",{name:"Numbers+listNumbers"}),(0,r.kt)("h3",{id:"numberslistnumbersrequest--promiselistnumberresponse"},"numbers.listNumbers(request) \u21d2 ",(0,r.kt)("code",null,"Promise.","<","ListNumberResponse",">")),(0,r.kt)("p",null,"Lists all Numbers from Routr with pagination."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#Numbers"},(0,r.kt)("code",null,"Numbers")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Returns"),": ",(0,r.kt)("code",null,"Promise.","<","ListNumberResponse",">")," - The list of Numbers  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"ListNumberRequest")),(0,r.kt)("td",{parentName:"tr",align:null},"The request to list Numbers")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.pageSize"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The number of Numbers to return")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.pageToken"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The page token to use for pagination")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const request = {\n pageSize: 10\n}\n\nnumbers.listNumbers(request)\n  .then(console.log)\n  .catch(console.error)   // an error occurred\n")),(0,r.kt)("a",{name:"Peers"}),(0,r.kt)("h2",{id:"peers--apiclient"},"Peers \u21d0 ",(0,r.kt)("code",null,"APIClient")),(0,r.kt)("p",null,"Use Routr Peers, a capability of Routr SIP Proxy, to create, update, get\nand delete Peers. The Peers API requires of a running Routr deployment."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": global class",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Extends"),": ",(0,r.kt)("code",null,"APIClient"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"See"),": module:core:APIClient  "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Peers"},"Peers")," \u21d0 ",(0,r.kt)("code",null,"APIClient"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#new_Peers_new"},"new Peers(options)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Peers+createPeer"},".createPeer(request)")," \u21d2 ",(0,r.kt)("code",null,"Promise.","<","CreatePeerResponse",">")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Peers+updatePeer"},".updatePeer(request)")," \u21d2 ",(0,r.kt)("code",null,"Promise.","<","UpdatePeerResponse",">")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Peers+getPeer"},".getPeer(ref)")," \u21d2 ",(0,r.kt)("code",null,"Promise.","<","GetPeerResponse",">")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Peers+deletePeer"},".deletePeer(ref)")," \u21d2 ",(0,r.kt)("code",null,"Promise.","<","void",">")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Peers+listPeers"},".listPeers(request)")," \u21d2 ",(0,r.kt)("code",null,"Promise.","<","ListPeerResponse",">"))))),(0,r.kt)("a",{name:"new_Peers_new"}),(0,r.kt)("h3",{id:"new-peersoptions"},"new Peers(options)"),(0,r.kt)("p",null,"Constructs a new Peer API object."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"ClientOptions")),(0,r.kt)("td",{parentName:"tr",align:null},"Options to indicate the objects endpoint")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const SDK = require("@routr/sdk")\nconst peers = new SDK.Peers()\n\nconst request = {\n  name: "Asterisk Conference Server",\n  username: "conference",\n  aor: "backend:conference",\n  contactAddr: "10.0.0.1:5060",\n  accessControlListRef: "4671371b-ff5d-48b1-aabe-d3c5ca5317a3",\n  credentialsRef: "4671371b-ff5d-48b1-aabe-d3c5ca5317a3",\n  balancingAlgorithm: LoadBalancingAlgorithm.LEAST_SESSIONS,\n  withSessionAffinity: true,\n  enabled: true,\n  extended: {\n    "key": "value"\n  }\n}\n\npeers.createPeer(request)\n  .then(console.log)\n  .catch(console.error)   // an error occurred\n')),(0,r.kt)("a",{name:"Peers+createPeer"}),(0,r.kt)("h3",{id:"peerscreatepeerrequest--promisecreatepeerresponse"},"peers.createPeer(request) \u21d2 ",(0,r.kt)("code",null,"Promise.","<","CreatePeerResponse",">")),(0,r.kt)("p",null,"Creates a new Peer on Routr."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#Peers"},(0,r.kt)("code",null,"Peers")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Returns"),": ",(0,r.kt)("code",null,"Promise.","<","CreatePeerResponse",">")," - The newly created Peer",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Throws"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"if request is null")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"CreatePeerRequest")),(0,r.kt)("td",{parentName:"tr",align:null},"The request to create an Peer")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.name"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the Peer")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.aor"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Address of Record of the Peer")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.contactAddr"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Optional contact address of the Peer")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.accessControlListRef"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Access Control List reference of the Peer")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.credentialsRef"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Credentials reference of the Credentials for the Peer")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.balancingAlgorithm"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"LoadBalancingAlgorithm")),(0,r.kt)("td",{parentName:"tr",align:null},'Optional balancing algorithm for the Peer (defaults to "round-robin")')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.withSessionAffinity"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"Whether the Peer has session affinity or not (defaults to false)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.enabled"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"Whether the Peer is enabled or not (for future use)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.extended"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Object")),(0,r.kt)("td",{parentName:"tr",align:null},"Optional extended attributes")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const request = {\n  name: "Asterisk Conference Server",\n  username: "conference",\n  aor: "backend:conference",\n  contactAddr: "10.0.0.1:5060",\n  accessControlListRef: "4671371b-ff5d-48b1-aabe-d3c5ca5317a3",\n  credentialsRef: "4671371b-ff5d-48b1-aabe-d3c5ca5317a3",\n  balancingAlgorithm: LoadBalancingAlgorithm.LEAST_SESSIONS,\n  withSessionAffinity: true,\n  enabled: true,\n  extended: {\n    "key": "value"\n  }\n}\n\npeers.createPeer(request)\n  .then(console.log)\n  .catch(console.error)   // an error occurred\n')),(0,r.kt)("a",{name:"Peers+updatePeer"}),(0,r.kt)("h3",{id:"peersupdatepeerrequest--promiseupdatepeerresponse"},"peers.updatePeer(request) \u21d2 ",(0,r.kt)("code",null,"Promise.","<","UpdatePeerResponse",">")),(0,r.kt)("p",null,"Updates an already existing Peer on Routr."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#Peers"},(0,r.kt)("code",null,"Peers")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Returns"),": ",(0,r.kt)("code",null,"Promise.","<","UpdatePeerResponse",">")," - The updated Peer  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"UpdatePeerRequest")),(0,r.kt)("td",{parentName:"tr",align:null},"Partial with the fields to update")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.name"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the Peer")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.aor"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Address of Record of the Peer")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.contactAddr"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Optional contact address of the Peer")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.accessControlListRef"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Access Control List reference of the Peer")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.credentialsRef"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Credentials reference of the Credentials for the Peer")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.balancingAlgorithm"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"LoadBalancingAlgorithm")),(0,r.kt)("td",{parentName:"tr",align:null},'Optional balancing algorithm for the Peer (defaults to "round-robin")')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.withSessionAffinity"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"Whether the Peer has session affinity or not (defaults to false)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.enabled"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"Whether the Peer is enabled or not (for future use)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.extended"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Object")),(0,r.kt)("td",{parentName:"tr",align:null},"Optional extended attributes")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const request = {\n  ref: "4671371b-ff5d-48b1-aabe-d3c5ca5317a3",\n  name: "Feature Server"\n}\n\npeers.updatePeer(request)\n  .then(console.log)\n  .catch(console.error)   // an error occurred\n')),(0,r.kt)("a",{name:"Peers+getPeer"}),(0,r.kt)("h3",{id:"peersgetpeerref--promisegetpeerresponse"},"peers.getPeer(ref) \u21d2 ",(0,r.kt)("code",null,"Promise.","<","GetPeerResponse",">")),(0,r.kt)("p",null,"Gets an Peer from Routr."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#Peers"},(0,r.kt)("code",null,"Peers")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Returns"),": ",(0,r.kt)("code",null,"Promise.","<","GetPeerResponse",">")," - The Peer  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ref"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The Peer's reference")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const ref = "4671371b-ff5d-48b1-aabe-d3c5ca5317a3"\n\npeers.getPeer(ref)\n  .then(console.log)\n  .catch(console.error)   // an error occurred\n')),(0,r.kt)("a",{name:"Peers+deletePeer"}),(0,r.kt)("h3",{id:"peersdeletepeerref--promisevoid"},"peers.deletePeer(ref) \u21d2 ",(0,r.kt)("code",null,"Promise.","<","void",">")),(0,r.kt)("p",null,"Deletes an Peer from Routr."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#Peers"},(0,r.kt)("code",null,"Peers")),"  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ref"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The Peer's reference")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const ref = "4671371b-ff5d-48b1-aabe-d3c5ca5317a3"\n\npeers.deletePeer(ref)\n  .then(console.log)\n  .catch(console.error)   // an error occurred\n')),(0,r.kt)("a",{name:"Peers+listPeers"}),(0,r.kt)("h3",{id:"peerslistpeersrequest--promiselistpeerresponse"},"peers.listPeers(request) \u21d2 ",(0,r.kt)("code",null,"Promise.","<","ListPeerResponse",">")),(0,r.kt)("p",null,"Lists all Peers from Routr with pagination."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#Peers"},(0,r.kt)("code",null,"Peers")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Returns"),": ",(0,r.kt)("code",null,"Promise.","<","ListPeerResponse",">")," - The list of Peers in the current page  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"ListPeerRequest")),(0,r.kt)("td",{parentName:"tr",align:null},"The request to list Peers")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.pageSize"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The number of Peers to return")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.pageToken"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The page token to use for pagination")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const request = {\n pageSize: 10\n}\n\npeers.listPeers(request)\n  .then(console.log)\n  .catch(console.error)   // an error occurred\n")),(0,r.kt)("a",{name:"Trunks"}),(0,r.kt)("h2",{id:"trunks--apiclient"},"Trunks \u21d0 ",(0,r.kt)("code",null,"APIClient")),(0,r.kt)("p",null,"Use Routr Trunks, a capability of Routr SIP Proxy, to create, update, get\nand delete Trunks. The Trunks API requires of a running Routr deployment."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": global class",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Extends"),": ",(0,r.kt)("code",null,"APIClient"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"See"),": module:core:APIClient  "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Trunks"},"Trunks")," \u21d0 ",(0,r.kt)("code",null,"APIClient"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#new_Trunks_new"},"new Trunks(options)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Trunks+createTrunk"},".createTrunk(request)")," \u21d2 ",(0,r.kt)("code",null,"Promise.","<","CreateTrunkResponse",">")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Trunks+updateTrunk"},".updateTrunk(request)")," \u21d2 ",(0,r.kt)("code",null,"Promise.","<","UpdateTrunkResponse",">")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Trunks+getTrunk"},".getTrunk(ref)")," \u21d2 ",(0,r.kt)("code",null,"Promise.","<","GetTrunkResponse",">")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Trunks+deleteTrunk"},".deleteTrunk(ref)")," \u21d2 ",(0,r.kt)("code",null,"Promise.","<","void",">")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Trunks+listTrunks"},".listTrunks(request)")," \u21d2 ",(0,r.kt)("code",null,"Promise.","<","ListTrunkResponse",">"))))),(0,r.kt)("a",{name:"new_Trunks_new"}),(0,r.kt)("h3",{id:"new-trunksoptions"},"new Trunks(options)"),(0,r.kt)("p",null,"Constructs a new Trunk API object."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"ClientOptions")),(0,r.kt)("td",{parentName:"tr",align:null},"Options to indicate the objects endpoint")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const SDK = require("@routr/sdk")\nconst trunks = new SDK.Trunks()\n\nconst request = {\n  name: "Trunk from Twilio",\n  inboundUri: "sip:twilio.sip.acme.io",\n  accessControlListRef: "4671371b-ff5d-48b1-aabe-d3c5ca5317a3",\n  inboundCredentialsRef: "4671371b-ff5d-48b1-aabe-d3c5ca5317a3",\n  outboundCredentialsRef: "4671371b-ff5d-48b1-aabe-d3c5ca5317a3",\n  uris: [{\n    host: "acme.sip.twilio.com",\n    port: 5060,\n    transport: "udp",\n    user: "AC1234567890",\n    weight: 1,\n    priority: 1\n  }],\n  extended: {\n    "key": "value"\n  }\n}\n\ntrunks.createTrunk(request)\n  .then(console.log)\n  .catch(console.error)   // an error occurred\n')),(0,r.kt)("a",{name:"Trunks+createTrunk"}),(0,r.kt)("h3",{id:"trunkscreatetrunkrequest--promisecreatetrunkresponse"},"trunks.createTrunk(request) \u21d2 ",(0,r.kt)("code",null,"Promise.","<","CreateTrunkResponse",">")),(0,r.kt)("p",null,"Creates a new Trunk on Routr."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#Trunks"},(0,r.kt)("code",null,"Trunks")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Returns"),": ",(0,r.kt)("code",null,"Promise.","<","CreateTrunkResponse",">")," - The newly created Trunk",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Throws"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"if request is null")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"CreateTrunkRequest")),(0,r.kt)("td",{parentName:"tr",align:null},"The request to create an Trunk")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.name"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the Trunk")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.inboundUri"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Inbound URI of the Trunk")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.accessControlListRef"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Access Control List reference")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.inboundCredentialsRef"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The reference of the inbound credentials")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.outboundCredentialsRef"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The reference of the outbound credentials")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.uris"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Array.","<","TrunkURI",">")),(0,r.kt)("td",{parentName:"tr",align:null},"The outbound URIs of the Trunk")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const request = {\n  name: "Trunk from Twilio",\n  inboundUri: "sip:twilio.sip.acme.io",\n  accessControlListRef: "4671371b-ff5d-48b1-aabe-d3c5ca5317a3",\n  inboundCredentialsRef: "4671371b-ff5d-48b1-aabe-d3c5ca5317a3",\n  outboundCredentialsRef: "4671371b-ff5d-48b1-aabe-d3c5ca5317a3",\n  uris: [{\n    host: "acme.sip.twilio.com",\n    port: 5060,\n    transport: "udp",\n    user: "AC1234567890",\n    weight: 1,\n    priority: 1\n  }],\n  extended: {\n    "key": "value"\n  }\n}\n\ntrunks.createTrunk(request)\n  .then(console.log)\n  .catch(console.error)   // an error occurred\n')),(0,r.kt)("a",{name:"Trunks+updateTrunk"}),(0,r.kt)("h3",{id:"trunksupdatetrunkrequest--promiseupdatetrunkresponse"},"trunks.updateTrunk(request) \u21d2 ",(0,r.kt)("code",null,"Promise.","<","UpdateTrunkResponse",">")),(0,r.kt)("p",null,"Updates an already existing Trunk on Routr."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#Trunks"},(0,r.kt)("code",null,"Trunks")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Returns"),": ",(0,r.kt)("code",null,"Promise.","<","UpdateTrunkResponse",">")," - The updated Trunk  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"UpdateTrunkRequest")),(0,r.kt)("td",{parentName:"tr",align:null},"Partial with the fields to update")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.name"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the Trunk")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.inboundUri"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Inbound URI of the Trunk")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.accessControlListRef"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Access Control List reference")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.inboundCredentialsRef"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The reference of the inbound credentials")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.outboundCredentialsRef"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The reference of the outbound credentials")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.uris"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Array.","<","TrunkURI",">")),(0,r.kt)("td",{parentName:"tr",align:null},"The outbound URIs of the Trunk")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.extended"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Object")),(0,r.kt)("td",{parentName:"tr",align:null},"Optional extended attributes")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const request = {\n  ref: "4671371b-ff5d-48b1-aabe-d3c5ca5317a3",\n  name: "Trunk from Twilio (US-East)",\n}\n\ntrunks.updateTrunk(request)\n  .then(console.log)\n  .catch(console.error)   // an error occurred\n')),(0,r.kt)("a",{name:"Trunks+getTrunk"}),(0,r.kt)("h3",{id:"trunksgettrunkref--promisegettrunkresponse"},"trunks.getTrunk(ref) \u21d2 ",(0,r.kt)("code",null,"Promise.","<","GetTrunkResponse",">")),(0,r.kt)("p",null,"Gets an Trunk from Routr."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#Trunks"},(0,r.kt)("code",null,"Trunks")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Returns"),": ",(0,r.kt)("code",null,"Promise.","<","GetTrunkResponse",">")," - The Trunk  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ref"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The Trunk's reference")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const ref = "4671371b-ff5d-48b1-aabe-d3c5ca5317a3"\n\ntrunks.getTrunk(ref)\n  .then(console.log)\n  .catch(console.error)   // an error occurred\n')),(0,r.kt)("a",{name:"Trunks+deleteTrunk"}),(0,r.kt)("h3",{id:"trunksdeletetrunkref--promisevoid"},"trunks.deleteTrunk(ref) \u21d2 ",(0,r.kt)("code",null,"Promise.","<","void",">")),(0,r.kt)("p",null,"Deletes an Trunk from Routr."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#Trunks"},(0,r.kt)("code",null,"Trunks")),"  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ref"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The Trunk's reference")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const ref = "4671371b-ff5d-48b1-aabe-d3c5ca5317a3"\n\ntrunks.deleteTrunk(ref)\n  .then(console.log)\n  .catch(console.error)   // an error occurred\n')),(0,r.kt)("a",{name:"Trunks+listTrunks"}),(0,r.kt)("h3",{id:"trunkslisttrunksrequest--promiselisttrunkresponse"},"trunks.listTrunks(request) \u21d2 ",(0,r.kt)("code",null,"Promise.","<","ListTrunkResponse",">")),(0,r.kt)("p",null,"Lists all Trunks from Routr with pagination."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#Trunks"},(0,r.kt)("code",null,"Trunks")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Returns"),": ",(0,r.kt)("code",null,"Promise.","<","ListTrunkResponse",">")," - The list of Trunks in the current page  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"ListTrunkRequest")),(0,r.kt)("td",{parentName:"tr",align:null},"The request to list Trunks")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.pageSize"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The number of Trunks to return")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.pageToken"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The page token to use for pagination")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const request = {\n pageSize: 10\n}\n\ntrunks.listTrunks(request)\n  .then(console.log)\n  .catch(console.error)   // an error occurred\n")))}m.isMDXComponent=!0}}]);