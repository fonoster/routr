"use strict";(self.webpackChunkroutr_docs=self.webpackChunkroutr_docs||[]).push([[2433],{5939:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>l});var o=t(4848),r=t(8453);const i={},s="Concepts",a={id:"connect/concepts",title:"Concepts",description:"The Connect Mode is Routr's implementation of the SIPConnect standard. Routr introduces the Connect Processor and five routing types as part of the implementation.",source:"@site/docs/connect/concepts.md",sourceDirName:"connect",slug:"/connect/concepts",permalink:"/docs/2.11.5/connect/concepts",draft:!1,unlisted:!1,editUrl:"https://github.com/fonoster/routr-website/edit/main/docs/connect/concepts.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/docs/2.11.5/connect/introduction"},next:{title:"Docker installation",permalink:"/docs/2.11.5/connect/quick-start/docker"}},c={},l=[{value:"Agent-to-Agent",id:"agent-to-agent",level:2},{value:"Agent-to-PSTN",id:"agent-to-pstn",level:2},{value:"From-PSTN",id:"from-pstn",level:2},{value:"Peer-to-PSTN",id:"peer-to-pstn",level:2},{value:"Agent-to-Peer",id:"agent-to-peer",level:2}];function d(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"concepts",children:"Concepts"}),"\n",(0,o.jsx)(n.p,{children:"The Connect Mode is Routr's implementation of the SIPConnect standard. Routr introduces the Connect Processor and five routing types as part of the implementation."}),"\n",(0,o.jsx)(n.p,{children:'The Connect Mode introduces the Connect Processor, a built-in Processor with the necessary logic to implement the "SIP Connect v1.1" specification.'}),"\n",(0,o.jsx)(n.p,{children:"The following routing types are supported:"}),"\n",(0,o.jsx)(n.h2,{id:"agent-to-agent",children:"Agent-to-Agent"}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"agent-to-agent"})," routing type allows an Agent to call another Agent in the same Domain. The following yaml configuration shows a simple setup involving one Domain and two Agents:"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Domain configuration"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"- apiVersion: v2beta1\n  kind: Domain\n  ref: domain-01\n  metadata:\n    name: Local Domain\n  spec:\n    context:\n      domainUri: sip.local\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Agents configuration"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:'- apiVersion: v2beta1\n  kind: Agent\n  ref: agent-01\n  metadata:\n    name: John Doe\n  spec:\n    username: "1001"\n    domainRef: domain-01\n    credentialsRef: credentials-01\n\n- apiVersion: v2beta1\n  kind: Agent\n  ref: agent-02\n  metadata:\n    name: Jane Doe\n  spec:\n    username: "1002"\n    domainRef: domain-01\n    credentialsRef: credentials-02\n'})}),"\n",(0,o.jsx)(n.p,{children:"With the configuration above, John and Jane can call each other using their usernames."}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"Here, we are showing the yaml representation of the resources for illustration purposes. However, we typically use the CTL or the SDK to create resources."}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"agent-to-pstn",children:"Agent-to-PSTN"}),"\n",(0,o.jsxs)(n.p,{children:["In the Connect Mode, the ",(0,o.jsx)(n.code,{children:"agent-to-pstn"})," routing type allows an Agent to call numbers in the Private Switch Telephone Network (PSTN) using a Number and Trunking."]}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"egressPolicies"})," section of the Domain resource handles the routing. The examples below show how these resources relate to each other."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Domain configuration"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:'- apiVersion: v2beta1\n  kind: Domain\n  ref: domain-01\n  metadata:\n    name: Local Domain\n  spec:\n    accessControlListRef: acl-01\n    context:\n      domainUri: sip.local\n      egressPolicies:\n        - rule: ".*"\n          numberRef: number-01\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Number configuration"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:'- apiVersion: v2beta1\n  kind: Number\n  ref: number-01\n  metadata:\n    name: "(910)343-4434"\n    geoInfo:\n      city: Durham, NC\n      country: USA\n      countryIsoCode: US\n  spec:\n    trunkRef: trunk-01\n    location:\n      telUrl: tel:+19103434434\n'})}),"\n",(0,o.jsxs)(n.p,{children:["With the previous configuration, any Agent in the Domain can call the PSTN using the Number ",(0,o.jsx)(n.code,{children:"(910)343-4434"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"from-pstn",children:"From-PSTN"}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"from-pstn"})," routing type outlines how a call from the PSTN connects to an Agent or a Peer using a Number and Trunking. The ",(0,o.jsx)(n.code,{children:"location"})," section of the Number resource manages this routing. For instance, to route calls from the PSTN to an Agent, you can use the following configuration:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:'- apiVersion: v2beta1\n  kind: Number\n  ref: number-01\n  metadata:\n    name: "(910)343-4434"\n    geoInfo:\n      city: Durham, NC\n      country: USA\n      countryIsoCode: US\n  spec:\n    trunkRef: trunk-01\n    location:\n      telUrl: tel:+19103434434\n      aorLink: sip:john@sip.local\n'})}),"\n",(0,o.jsx)(n.p,{children:"You can apply the same configuration to route calls from the PSTN to a Peer. For instance, to direct calls from the PSTN to an Asterisk server, you can adopt this configuration, provided the endpoint is registered with Routr."}),"\n",(0,o.jsx)(n.h2,{id:"peer-to-pstn",children:"Peer-to-PSTN"}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"peer-to-pstn"})," routing type describes how a Peer such as Asterisk can reach the PSTN. Unlike ",(0,o.jsx)(n.code,{children:"agent-to-pstn"}),", this routing is not bound to a Domain. Because Peers are trusted entities, they can call the PSTN using the ",(0,o.jsx)(n.code,{children:"Trunking"})," resource. This routing type is automatically selected when the number dialed by the Peer is not in the location table."]}),"\n",(0,o.jsx)(n.h2,{id:"agent-to-peer",children:"Agent-to-Peer"}),"\n",(0,o.jsxs)(n.p,{children:['This routing type allows any Agent to call a Peer. Because the Agent is going "outside" of the Domain\'s boundaries, the Agent must have a valid JWT token in the ',(0,o.jsx)(n.code,{children:"X-Connect-Token"})," header. Incidentally, required claims in the JWT token include fields similar to the ",(0,o.jsx)(n.code,{children:"Agent"})," resource. Here is an example of the payload of a JWT token:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "ref": "agent-01",\n  "domainRef": "domain-01",\n  "aor": "sip:1001@sip.local",\n  "aorLink": "sip:asterisk@default",\n  "domain": "sip.local",\n  "privacy": "NONE",\n  "allowedMethods": ["INVITE", "REGISTER"]\n}\n'})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var o=t(6540);const r={},i=o.createContext(r);function s(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);