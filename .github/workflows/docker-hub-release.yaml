name: publish to docker hub

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      use_branch_name:
        required: false
        type: string
        default: 'false'

jobs:
  download_artifacts:
    name: Download Artifacts

    runs-on: ubuntu-latest

    steps:
      - name: Login to GitHub Registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Download build
        uses: actions/download-artifact@v4
        with:
          name: routr-build
      - name: Get the version
        shell: bash
        id: release
        run: |
          if [[ "${{ inputs.use_branch_name }}" == "true" ]]; then
            BRANCH_NAME=${GITHUB_REF#refs/heads/}
            SAFE_NAME=$(echo "$BRANCH_NAME" | tr '/' '-')
            echo "VERSION=$SAFE_NAME" >> $GITHUB_OUTPUT
          else
            echo "VERSION=$(node -e "console.log(require('./lerna.json').version)")" >> $GITHUB_OUTPUT
          fi
    outputs:
      version: ${{ steps.release.outputs.VERSION }}

  publish_one_to_docker_hub:
    name: Publish Routr One to Docker Hub

    runs-on: ubuntu-latest

    needs: [download_artifacts]
    steps:
      - name: Download build
        uses: actions/download-artifact@v4
        with:
          name: routr-build
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Publish the Routr One image
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          name: fonoster/routr-one
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          tags: "latest,${{ needs.download_artifacts.outputs.VERSION }}"
          platforms: linux/amd64,linux/arm64

  publish_edgeport_to_docker_hub:
    name: Publish EdgePort to Docker Hub

    runs-on: ubuntu-latest

    needs: [download_artifacts]
    steps:
      - name: Download build
        uses: actions/download-artifact@v4
        with:
          name: routr-build
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Publish the Edgeport image
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          name: fonoster/routr-edgeport
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          context: .
          dockerfile: mods/edgeport/Dockerfile
          tags: "latest,${{ needs.download_artifacts.outputs.VERSION }}"
          platforms: linux/amd64,linux/arm64

  publish_dispatcher_to_docker_hub:
    name: Publish Dispatcher to Docker Hub

    runs-on: ubuntu-latest

    needs: [download_artifacts]
    steps:
      - name: Download build
        uses: actions/download-artifact@v4
        with:
          name: routr-build
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Publish the image
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          name: fonoster/routr-dispatcher
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          workdir: mods/dispatcher
          tags: "latest,${{ needs.download_artifacts.outputs.VERSION }}"
          platforms: linux/amd64,linux/arm64

  publish_location_to_docker_hub:
    name: Publish Location to Docker Hub

    runs-on: ubuntu-latest

    needs: [download_artifacts]
    steps:
      - name: Download build
        uses: actions/download-artifact@v4
        with:
          name: routr-build
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Publish the image
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          name: fonoster/routr-location
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          workdir: mods/location
          tags: "latest,${{ needs.download_artifacts.outputs.VERSION }}"
          platforms: linux/amd64,linux/arm64

  publish_connect_to_docker_hub:
    name: Publish Connect to Docker Hub

    runs-on: ubuntu-latest

    needs: [download_artifacts]
    steps:
      - name: Download build
        uses: actions/download-artifact@v4
        with:
          name: routr-build
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Publish the image
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          name: fonoster/routr-connect
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          workdir: mods/connect
          tags: "latest,${{ needs.download_artifacts.outputs.VERSION }}"
          platforms: linux/amd64,linux/arm64

  publish_simpledata_to_docker_hub:
    name: Publish SimpleData to Docker Hub

    runs-on: ubuntu-latest

    needs: [download_artifacts]
    steps:
      - name: Download build
        uses: actions/download-artifact@v4
        with:
          name: routr-build
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Publish the image
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          name: fonoster/routr-simpledata
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          workdir: mods/simpledata
          tags: "latest,${{ needs.download_artifacts.outputs.VERSION }}"
          platforms: linux/amd64,linux/arm64

  publish_simpleauth_to_docker_hub:
    name: Publish SimpleAuth to Docker Hub

    runs-on: ubuntu-latest

    needs: [download_artifacts]
    steps:
      - name: Download build
        uses: actions/download-artifact@v4
        with:
          name: routr-build
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Publish the image
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          name: fonoster/routr-simpleauth
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          workdir: mods/simpleauth
          tags: "latest,${{ needs.download_artifacts.outputs.VERSION }}"
          platforms: linux/amd64,linux/arm64

  publish_requester_to_docker_hub:
    name: Publish Requester to Docker Hub

    runs-on: ubuntu-latest

    needs: [download_artifacts]
    steps:
      - name: Download build
        uses: actions/download-artifact@v4
        with:
          name: routr-build
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Publish the image
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          name: fonoster/routr-requester
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          workdir: .
          dockerfile: mods/requester/Dockerfile
          tags: "latest,${{ needs.download_artifacts.outputs.VERSION }}"
          platforms: linux/amd64,linux/arm64

  publish_registry_to_docker_hub:
    name: Publish Registry to Docker Hub

    runs-on: ubuntu-latest

    needs: [download_artifacts]
    steps:
      - name: Download build
        uses: actions/download-artifact@v4
        with:
          name: routr-build
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Publish the image
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          name: fonoster/routr-registry
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          workdir: mods/registry
          tags: "latest,${{ needs.download_artifacts.outputs.VERSION }}"
          platforms: linux/amd64,linux/arm64

  publish_pgdata_to_docker_hub:
    name: Publish the PGData image

    runs-on: ubuntu-latest

    needs: [download_artifacts]
    steps:
      - name: Download build
        uses: actions/download-artifact@v4
        with:
          name: routr-build
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Publish the image
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          name: fonoster/routr-pgdata
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          context: .
          dockerfile: mods/pgdata/Dockerfile
          buildoptions: "--target runner"
          tags: "latest,${{ needs.download_artifacts.outputs.VERSION }}"
          platforms: linux/amd64,linux/arm64

  publish_pgdata_migrations_to_docker_hub:
    name: Publish the Postgres DB Migrations image

    runs-on: ubuntu-latest

    needs: [download_artifacts]
    steps:
      - name: Download build
        uses: actions/download-artifact@v4
        with:
          name: routr-build
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Publish the image
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          name: fonoster/routr-pgdata-migrations
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          context: .
          dockerfile: mods/pgdata/Dockerfile
          buildoptions: "--target migrations"
          tags: "latest,${{ needs.download_artifacts.outputs.VERSION }}"
          platforms: linux/amd64,linux/arm64

  publish_echo_to_docker_hub:
    name: Publish the Echo image

    runs-on: ubuntu-latest

    needs: [download_artifacts]
    steps:
      - name: Download build
        uses: actions/download-artifact@v4
        with:
          name: routr-build
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Publish the image
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          name: fonoster/routr-echo
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          workdir: mods/echo
          tags: "latest,${{ needs.download_artifacts.outputs.VERSION }}"
          platforms: linux/amd64,linux/arm64

  publish_rtprelay_to_docker_hub:
    name: Publish the RTPrelay image

    runs-on: ubuntu-latest

    needs: [download_artifacts]
    steps:
      - name: Download build
        uses: actions/download-artifact@v4
        with:
          name: routr-build
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Publish the image
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          name: fonoster/routr-rtprelay
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          workdir: mods/rtprelay
          tags: "latest,${{ needs.download_artifacts.outputs.VERSION }}"
          platforms: linux/amd64,linux/arm64
