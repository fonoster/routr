name: build
on: push
jobs:
  build:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Prepare environment
        run: |
          curl -L https://github.com/oracle/graal/releases/download/vm-19.2.0/graalvm-ce-linux-amd64-19.2.0.tar.gz > graalvm-ce-linux-amd64-19.2.0.tar.gz
          tar xvf graalvm-ce-linux-amd64-19.2.0.tar.gz
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter before-build
      - name: Set ENV for codeclimate (pull_request)
        run: |
          git fetch --no-tags --prune --depth=1 origin +refs/heads/$GITHUB_HEAD_REF:refs/remotes/origin/$GITHUB_HEAD_REF
          echo "::set-output name=GIT_BRANCH::$GITHUB_HEAD_REF"
          echo "::set-output name=GIT_COMMIT_SHA::$(git rev-parse origin/$GITHUB_HEAD_REF)"
        if: github.event_name == 'pull_request'

      - name: Set ENV for codeclimate (push)
        run: |
          echo "::set-output name=GIT_BRANCH::$GITHUB_REF"
          echo "::set-output name=GIT_COMMIT_SHA::$GITHUB_SHA"
        if: github.event_name == 'push'
      - name: Setup Redis DB
        uses: zhulik/redis-action@v1.0.0
        with:
          redis version: '5'
      - name: Get version
        id: get_version
        run: echo ::set-output name=ROUTR_VERSION::$(node -e "console.log(require('./package.json').version)")
      - name: Unit tests
        env:
          CC_TEST_REPORTER_ID: 19325f806984a923fa5ca65ee90ca519fc2bf3debc03634943aa36c5e57f6207
        run: |
          export GRAALVM_HOME=$(pwd)/graalvm-ce-19.2.0
          export JAVA_HOME=$GRAALVM_HOME
          export GIT_BRANCH=${{ steps.get_version.outputs.GIT_BRANCH }}
          export GIT_COMMIT_SHA=${{ steps.get_version.outputs.GIT_COMMIT_SHA }}
          npm i
          npm test
          #./cc-test-reporter after-build --exit-code $?
      - name: Create dist files
        env:
          ROUTR_VERSION: ${{ steps.get_version.outputs.ROUTR_VERSION }}
        run: |
          npm run distro:linux
          npm run distro:darwin
          npm run distro:windows
      #- name: Compliance tests
      #  env:
      #    ROUTR_VERSION: ${{ steps.get_version.outputs.ROUTR_VERSION }}
      #  run: docker-compose -f compliance.yml up --abort-on-container-exit --exit-code-from routr-eet
      - name: Publish draft release
        uses: ncipollo/release-action@v1
        with:
          name: Routr 1.x.x (Draft)
          artifacts: "routr-1.*"
          bodyFile: "RELEASE.md"
          draft: true
          tag: ${{ steps.get_version.outputs.ROUTR_VERSION }}
          token: ${{ secrets.GITHUB_TOKEN }}
