{
  "name": "root",
  "private": true,
  "workspaces": [
    "mods/*"
  ],
  "scripts": {
    "start": "cross-env NODE_ENV=dev ENABLE_HEALTHCHECKS=false LOGS_LEVEL=verbose nodemon ./.scripts/runner",
    "start:one": "./.scripts/one.sh",
    "start:connect": "cross-env NODE_ENV=dev PATH_TO_AUTH=$(pwd)/config/auth.yaml API_ADDR=localhost:51907 LOCATION_ADDR=localhost:51902 LOGS_LEVEL=verbose nodemon mods/connect/src/runner",
    "start:simpleauth": "cross-env NODE_ENV=dev PATH_TO_AUTH=$(pwd)/config/auth.yaml METHODS=MESSAGE LOGS_LEVEL=verbose nodemon mods/simpleauth/src/runner",
    "start:simpledata": "cross-env NODE_ENV=dev PATH_TO_RESOURCES=$(pwd)/config/resources LOGS_LEVEL=verbose nodemon mods/simpledata/src/runner",
    "start:pgdata": "cross-env  NODE_ENV=dev LOGS_LEVEL=verbose nodemon mods/pgdata/src/runner",
    "start:echo": "cross-env NODE_ENV=dev LOGS_LEVEL=verbose nodemon mods/echo/src/runner",
    "start:dispatcher": "cross-env NODE_ENV=dev LOGS_LEVEL=verbose CONFIG_PATH=$(pwd)/config/dispatcher.yaml nodemon mods/dispatcher/src/runner",
    "start:location": "cross-env NODE_ENV=dev LOGS_LEVEL=verbose CONFIG_PATH=$(pwd)/config/location.yaml nodemon mods/location/src/runner",
    "start:registry": "cross-env NODE_ENV=dev LOGS_LEVEL=verbose CONFIG_PATH=$(pwd)/config/registry.yaml nodemon mods/registry/src/runner",
    "start:edgeport": "cross-env NODE_ENV=dev LOGS_LEVEL=verbose ./mods/edgeport/edgeport.sh",
    "start:requester": "cross-env NODE_ENV=dev LOGS_LEVEL=verbose ./mods/requester/requester.sh",
    "start:rtprelay": "cross-env  NODE_ENV=dev LOGS_LEVEL=verbose nodemon mods/rtprelay/src/runner",
    "start:docs": "cd docs && npm start",
    "start:deps": "docker compose -f compose.dev.yaml up rtpengine redis postgres adminer -d",
    "stop:deps": "docker compose -f compose.dev.yaml down rtpengine redis postgres adminer",
    "db:migrate": "npx prisma migrate dev --schema ./mods/pgdata/schema.prisma --name changeme",
    "generate:certs": "SERVER_CERT_SUBJECT='/CN=localhost' CA_CERT_SUBJECT='/CN=Self Signed CA' ./.scripts/generate-certs.sh .certs",
    "convert:certs": "./.scripts/convert-to-p12.sh && mv signaling.p12 etc/certs/",
    "transpile": "tsc",
    "make": "npm install && npm run build && npm run setup",
    "setup": "./.scripts/setup.sh",
    "test": "cross-env NODE_ENV=dev mocha mods/*/test/*.unit.test.ts --exit",
    "test:integration": "cross-env NODE_ENV=dev nyc mocha mods/*/test/*.int.test.ts --exit",
    "test:graaljs": "cross-env NODE_ENV=dev nyc .scripts/mocha-wrapper.sh mods/**/graaljstest/*.unit.test.ts --exit",
    "test:java": "./gradlew test",
    "build": "npx prisma generate --schema ./mods/pgdata/schema.prisma && lerna run build && npm run bundle",
    "build:java": "npm run setup",
    "clean": "./.scripts/clean.sh",
    "bundle": "webpack --config webpack.config.js --mode none",
    "prebundle": "cross-env npm run setup && npm run transpile && ./.scripts/prebundle.sh",
    "bump:version": "rimraf mods/**/.lerna-changed-buster-* && lerna exec -- touch .lerna-changed-buster-$RANDOM",
    "lint": "eslint mods --ext .ts --fix",
    "format": "prettier --write mods/**/src",
    "prepare": "husky install",
    "hostile:load": "sudo hostile load etc/hosts.txt",
    "hostile:unload": "sudo hostile unload etc/hosts.txt",
    "publish": "lerna publish --yes --no-git-reset --dist-tag next $(./.scripts/next-release.sh) --message \"chore(release): publish %s [skip ci]\"",
    "publish:prerelease": "lerna publish prerelease --no-private --dist-tag next",
    "publish:frompackages": "lerna publish from-package",
    "typecheck": "tsc --noEmit",
    "helm:package": "helm package ops/charts/connect -d .charts",
    "helm:index": "helm repo index .charts --merge .charts/index.yaml",
    "generate:readme": "lerna run generate:readme"
  },
  "devDependencies": {
    "@commitlint/cli": "^17.0.3",
    "@commitlint/config-conventional": "^17.0.3",
    "@types/chai": "^4.2.11",
    "@types/chai-as-promised": "^7.1.2",
    "@types/mocha": "^8.2.3",
    "@types/node": "^18.11.9",
    "@types/sinon": "^10.0.6",
    "@types/sinon-chai": "^3.2.4",
    "@typescript-eslint/eslint-plugin": "^5.30.0",
    "buffer": "^6.0.3",
    "chai": "^4",
    "chai-as-promised": "^7.1.1",
    "chai-exclude": "^2.1.0",
    "cross-env": "^7.0.2",
    "eslint": "^7.23.0",
    "eslint-config-google": "^0.14.0",
    "eslint-config-prettier": "^8.1.0",
    "eslint-plugin-no-loops": "^0.3.0",
    "eslint-plugin-notice": "^0.9.10",
    "eslint-plugin-prettier": "^3.3.1",
    "esm": "^3.2.25",
    "hostile": "^1.3.3",
    "husky": "^5.2.0",
    "jsdoc-to-markdown": "^8.0.0",
    "jvm-npm": "^0.1.1",
    "lerna": "^8.0.0",
    "mocha": "^9.2.2",
    "nodemon": "^3.0.1",
    "nyc": "^15.1.0",
    "path": "^0.12.7",
    "prettier": "^2.6.2",
    "prisma": "^5.9.1",
    "rimraf": "^3.0.2",
    "sinon": "^9.0.2",
    "sinon-chai": "^3.5.0",
    "ts-loader": "^9.4.2",
    "ts-node": "^10.9.1",
    "typescript": "^4.9.5",
    "webpack": "^5.80.0",
    "webpack-cli": "^4.10.0"
  },
  "dependencies": {
    "@fonoster/logger": "0.6.0",
    "@prisma/client": "^5.9.1",
    "funfix": "^7.0.1",
    "pb-util": "^1.0.3"
  },
  "nodemonConfig": {
    "watch": [
      "./mods/"
    ],
    "ext": "ts",
    "exec": "ts-node",
    "ignore": "**/*.d.ts"
  },
  "nyc": {
    "exclude": [
      "**/*.js"
    ]
  }
}
